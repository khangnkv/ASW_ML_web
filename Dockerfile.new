# Use official Python image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production

# Set work directory
WORKDIR /app

# Install system dependencies including curl for health checks
RUN apt-get update && \
    apt-get install -y \
        build-essential \
        gcc \
        libgl1-mesa-glx \
        curl \
        && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt ./
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY backend ./backend
COPY preprocessing.py ./preprocessing.py
COPY run_backend_only.py ./run_backend_only.py
COPY performance_utils.py ./performance_utils.py

# Copy notebooks directory with all required files
COPY notebooks ./notebooks/

# Create all necessary directories with proper permissions
RUN mkdir -p \
    ./backend/uploads \
    ./backend/preprocessed_unencoded \
    ./backend/notebooks/project_info \
    ./backend/model \
    ./data \
    ./logs && \
    chmod -R 755 ./backend/uploads ./backend/preprocessed_unencoded ./backend/notebooks ./data ./logs

# Copy model files
COPY backend/model/ ./backend/model/

# Handle ProjectID_Detail.xlsx file - copy if exists
RUN if [ -f ./notebooks/project_info/ProjectID_Detail.xlsx ]; then \
        cp ./notebooks/project_info/ProjectID_Detail.xlsx ./backend/notebooks/project_info/; \
        echo "ProjectID_Detail.xlsx copied successfully"; \
    else \
        echo "Warning: ProjectID_Detail.xlsx not found. You may need to provide this file for full functionality."; \
    fi

# Add health check with correct endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Set working directory to backend
WORKDIR /app/backend

# Expose backend port
EXPOSE 5000

# Create a startup script that handles initialization
RUN echo '#!/bin/bash\n\
echo "Starting ML Prediction System Backend..."\n\
echo "Checking for required files..."\n\
if [ ! -f "/app/backend/notebooks/project_info/ProjectID_Detail.xlsx" ]; then\n\
    echo "Warning: ProjectID_Detail.xlsx not found. Some functionality may be limited."\n\
fi\n\
echo "Model files available:"\n\
ls -la /app/backend/model/*.pkl 2>/dev/null || echo "No model files found"\n\
echo "Starting Flask application..."\n\
python app_workflow.py' > /app/start.sh && chmod +x /app/start.sh

# Set default command to run the startup script
CMD ["/app/start.sh"]
