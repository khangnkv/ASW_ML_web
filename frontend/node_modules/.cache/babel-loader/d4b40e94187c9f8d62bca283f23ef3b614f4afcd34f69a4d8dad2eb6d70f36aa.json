{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khang Vinh Khac\\\\Documents\\\\web_dev\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge, Dropdown, ButtonGroup, Table } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _predictions$stats$ro, _predictions$stats, _predictions$stats$pr, _predictions$stats2;\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n\n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n  const [previewNumRows, setPreviewNumRows] = useState(5);\n  const [previewSection, setPreviewSection] = useState('both'); // 'head', 'tail', 'both'\n\n  // --- Column Booking Rate Analysis ---\n  const [selectedColumn, setSelectedColumn] = useState('');\n  // Get available columns (categorical only, not has_booked_prediction)\n  const availableColumns = useMemo(() => {\n    if (!currentData || !currentData[0]) return [];\n    return Object.keys(currentData[0]).filter(c => c !== 'has_booked_prediction' && c !== 'projectid' && typeof currentData[0][c] !== 'number');\n  }, [currentData]);\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback(data => {\n    if (!data || data.length === 0) return [];\n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    setFilterLoading(true);\n\n    // Use setTimeout to prevent UI blocking for large datasets\n    setTimeout(() => {\n      const filtered = data.filter(row => row.projectid && row.projectid.toString() === projectId.toString());\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback(projectId => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      filterDataByProject(fullDataset, projectId);\n    } else {\n      setFilteredData(fullDataset);\n    }\n  }, [fullDataset, filterDataByProject]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(fullDataset);\n  }, [fullDataset]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    return selectedProject ? filteredData : fullDataset;\n  }, [selectedProject, filteredData, fullDataset]);\n\n  // --- Preview Controls ---\n  const previewOptions = [5, 10, 50];\n  const sectionOptions = [{\n    value: 'head',\n    label: 'Head'\n  }, {\n    value: 'tail',\n    label: 'Tail'\n  }, {\n    value: 'both',\n    label: 'Head & Tail'\n  }];\n\n  // --- Updated previewRows logic ---\n  const previewRows = useMemo(() => {\n    if (!currentData || currentData.length === 0) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return currentData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return currentData.slice(-n);\n    } else {\n      // both\n      if (currentData.length <= 2 * n) {\n        return currentData;\n      }\n      const firstN = currentData.slice(0, n);\n      const lastN = currentData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [currentData, previewNumRows, previewSection]);\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Cache the full dataset for filtering (all rows)\n      setFullDataset(response.data.full_dataset);\n      setFilteredData(response.data.full_dataset);\n\n      // Extract available projects from the full dataset\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,\n        // Keep preview for display\n        originalName: file.name\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n\n      // Reset filter state\n      setSelectedProject(null);\n      console.log('Uploaded fileData:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: response.data.full_dataset.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error uploading file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls']\n    },\n    multiple: false\n  });\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename\n      });\n\n      // Cache the full prediction dataset for filtering (all rows)\n      const fullPredictionData = response.data.full_dataset;\n      setFullDataset(fullPredictionData);\n      setFilteredData(fullPredictionData);\n\n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(fullPredictionData);\n      setAvailableProjects(projects);\n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n\n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Export logic ---\n  const exportResults = async format => {\n    if (!predictions) return;\n    try {\n      const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n        responseType: 'blob'\n      });\n      let extension = format;\n      if (format === 'xlsx') extension = 'xlsx';\n      if (format === 'csv') extension = 'csv';\n      if (format === 'json') extension = 'json';\n      saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n\n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [title, filterLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\",\n            className: \"ms-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-hover mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => {\n                  var _row$column;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: typeof row[column] === 'boolean' ? row[column] ? 'Yes' : 'No' : ((_row$column = row[column]) === null || _row$column === void 0 ? void 0 : _row$column.toString()) || ''\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  };\n\n  // --- Preview controls UI ---\n  const renderPreviewControls = () => {\n    var _sectionOptions$find;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center gap-3 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        onSelect: val => setPreviewNumRows(Number(val)),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          children: [previewNumRows, \" rows\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          split: true,\n          variant: \"outline-primary\",\n          id: \"dropdown-split-basic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: previewOptions.map(opt => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: opt,\n            children: [opt, \" rows\"]\n          }, opt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        onSelect: val => setPreviewSection(val),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: (_sectionOptions$find = sectionOptions.find(o => o.value === previewSection)) === null || _sectionOptions$find === void 0 ? void 0 : _sectionOptions$find.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          split: true,\n          variant: \"outline-secondary\",\n          id: \"dropdown-split-section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: sectionOptions.map(opt => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: opt.value,\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }, this);\n  };\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), \"File Retention Information\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Upload Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 18\n              }, this), \" \", uploadDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Deletion Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 18\n              }, this), \" \", deletionDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Days Remaining:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger',\n                className: \"ms-2\",\n                children: [daysLeft, \" days\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"info\",\n                className: \"ms-2\",\n                children: fileInfo.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), \"Storage Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-primary\",\n                children: storageStats.total_files\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-info\",\n                children: [storageStats.total_size_mb, \" MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-success\",\n                children: storageStats.retention_days\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Retention Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: fetchStorageStats,\n                children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this), \"Refresh\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this);\n  };\n\n  // --- Compute and Render Prediction Statistics (per project or overall) ---\n  const renderPredictionStats = () => {\n    // Use filtered data (currentData) for per-project stats\n    const data = currentData;\n    if (!data || data.length === 0) return null;\n    const total = data.length;\n    const totalCols = data[0] ? Object.keys(data[0]).length : 0;\n    // Count numeric and categorical columns\n    let numericCols = 0,\n      categoricalCols = 0;\n    if (data[0]) {\n      Object.keys(data[0]).forEach(col => {\n        const val = data[0][col];\n        if (typeof val === 'number' && !isNaN(val)) numericCols++;else categoricalCols++;\n      });\n    }\n    const predCol = data.map(row => row.has_booked_prediction);\n    const missingCount = predCol.filter(v => v === null || v === undefined || v === '' || typeof v === 'number' && isNaN(v)).length;\n    // const missingPct = total ? ((100 * missingCount) / total).toFixed(2) : '0.00';\n    // Count each class\n    const classCounts = {\n      '0': 0,\n      '1': 0\n    };\n    predCol.forEach(v => {\n      if (v === 0 || v === '0') classCounts['0']++;else if (v === 1 || v === '1') classCounts['1']++;\n    });\n    // Percent for each class\n    const classPercents = {\n      '0': total ? (100 * classCounts['0'] / total).toFixed(2) + '%' : '0.00%',\n      '1': total ? (100 * classCounts['1'] / total).toFixed(2) + '%' : '0.00%'\n    };\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          style: {\n            color: 'var(--bs-body-color)'\n          },\n          children: [\"Project \", selectedProject ? selectedProject : 'All', \" Prediction Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.1rem',\n            color: 'var(--bs-body-color)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 32,\n              flexWrap: 'wrap',\n              marginBottom: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#1976d2',\n                  fontWeight: 700,\n                  fontSize: 22\n                },\n                children: total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 100\n              }, this), \"Total Rows\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#00bcd4',\n                  fontWeight: 700,\n                  fontSize: 22\n                },\n                children: totalCols\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 104\n              }, this), \"Total Columns\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#43a047',\n                  fontWeight: 700,\n                  fontSize: 22\n                },\n                children: numericCols\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 106\n              }, this), \"Numeric Columns\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#ffc107',\n                  fontWeight: 700,\n                  fontSize: 22\n                },\n                children: categoricalCols\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 110\n              }, this), \"Categorical Columns\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '12px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 600,\n                background: 'var(--bs-secondary-bg, #f5f5f5)',\n                borderRadius: 16,\n                padding: '6px 16px',\n                display: 'inline-block',\n                color: 'var(--bs-body-color)'\n              },\n              children: [missingCount.toLocaleString(), \" missing values detected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 12,\n              fontWeight: 600\n            },\n            children: \"Prediction Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 12,\n              marginTop: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#388e3c',\n                marginBottom: 2\n              },\n              children: [\"Likely to book: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 700\n                },\n                children: classCounts['1']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#888',\n                  fontWeight: 400\n                },\n                children: [\"(\", classPercents['1'], \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#d32f2f'\n              },\n              children: [\"Unlikely to book: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 700\n                },\n                children: classCounts['0']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 35\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#888',\n                  fontWeight: 400\n                },\n                children: [\"(\", classPercents['0'], \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 95\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this);\n  };\n\n  // --- Column Booking Rate Analysis ---\n  const renderBookingRateByColumn = () => {\n    if (!selectedColumn || !currentData || !currentData[0]) return null;\n    // Group by value\n    const groups = {};\n    currentData.forEach(row => {\n      var _row$selectedColumn;\n      const val = (_row$selectedColumn = row[selectedColumn]) !== null && _row$selectedColumn !== void 0 ? _row$selectedColumn : 'Missing';\n      if (!groups[val]) groups[val] = {\n        total: 0,\n        booked: 0\n      };\n      groups[val].total++;\n      if (row.has_booked_prediction === 1 || row.has_booked_prediction === '1') groups[val].booked++;\n    });\n    // Compute percent and sort by booking rate\n    const summary = Object.entries(groups).map(([val, obj]) => ({\n      value: val,\n      total: obj.total,\n      booked: obj.booked,\n      percent: obj.total ? (100 * obj.booked / obj.total).toFixed(2) + '%' : '0.00%'\n    }));\n    summary.sort((a, b) => parseFloat(b.percent) - parseFloat(a.percent));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mb-0\",\n          children: [\"Booking Rate by \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#1976d2'\n            },\n            children: selectedColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 48\n          }, this), \" \", selectedProject ? `(Project ${selectedProject})` : '(All Projects)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.05rem',\n            color: 'var(--bs-body-color)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 8\n            },\n            children: \"Top 5 values most likely to book:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginBottom: 0\n            },\n            children: summary.slice(0, 5).map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 500\n                },\n                children: [item.value, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), \" \", item.booked, \" / \", item.total, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#388e3c',\n                  fontWeight: 600\n                },\n                children: [\"(\", item.percent, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 103\n              }, this)]\n            }, item.value + idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: () => setDarkMode(dm => !dm),\n      title: darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode',\n      children: darkMode ? /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 text-primary\",\n            children: \"ML Prediction System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-muted\",\n            children: \"Upload your CSV or Excel files to get predictions using our pre-trained models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          dismissible: true,\n          onClose: () => setError(null),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), !fileData && /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FiUpload, {\n                size: 48,\n                className: \"text-primary mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Drop your file here, or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                style: {\n                  color: 'var(--bs-body-color)'\n                },\n                children: \"Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted small\",\n                style: {\n                  color: 'var(--bs-body-color)'\n                },\n                children: \"File must contain a \\\"projectid\\\" column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              role: \"status\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Processing your file...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this), fileData && !loading && showPreview && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"File Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Filename:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 26\n                    }, this), \" \", fileData.originalName || fileData.filename]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: generatePredictions,\n                    disabled: loading || !fileData,\n                    className: \"me-2\",\n                    children: [/*#__PURE__*/_jsxDEV(FiDatabase, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 25\n                    }, this), \"Generate Predictions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: cleanup,\n                    children: \"Upload New File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: currentData,\n            title: selectedProject ? `Project ${selectedProject} Statistics` : \"Full Dataset Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), renderPreviewControls(), !previewRows || previewRows.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"No preview data available for this file.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 17\n          }, this) : renderPreviewTable(previewRows, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)]\n        }, void 0, true), predictions && !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"Prediction Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Rows Processed:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 663,\n                      columnNumber: 26\n                    }, this), \" \", (_predictions$stats$ro = (_predictions$stats = predictions.stats) === null || _predictions$stats === void 0 ? void 0 : _predictions$stats.rows_processed) !== null && _predictions$stats$ro !== void 0 ? _predictions$stats$ro : '-']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Prediction Distribution:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 26\n                    }, this), \" \", JSON.stringify((_predictions$stats$pr = (_predictions$stats2 = predictions.stats) === null || _predictions$stats2 === void 0 ? void 0 : _predictions$stats2.prediction_distribution) !== null && _predictions$stats$pr !== void 0 ? _predictions$stats$pr : {})]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), renderPredictionStats(), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: currentData,\n            title: selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), renderPreviewControls(), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Final Prediction Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), renderPreviewTable(previewRows, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`), /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(FiDownload, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 21\n                }, this), \"Export Results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-wrap gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  onClick: () => exportResults('csv'),\n                  className: \"btn-export\",\n                  children: \"Export as CSV\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-success\",\n                  onClick: () => exportResults('xlsx'),\n                  className: \"btn-export\",\n                  children: \"Export as Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-info\",\n                  onClick: () => exportResults('json'),\n                  className: \"btn-export\",\n                  children: \"Export as JSON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              marginTop: '2rem',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              size: \"lg\",\n              onClick: cleanup,\n              style: {\n                minWidth: 220,\n                fontWeight: 600\n              },\n              children: \"Upload New File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), fileInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderFileRetentionInfo(), renderStorageStats()]\n        }, void 0, true), predictions && !loading && availableColumns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"column-select\",\n            style: {\n              fontWeight: 600,\n              marginRight: 8,\n              color: 'var(--bs-body-color)'\n            },\n            children: \"Analyze by column:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"column-select\",\n            value: selectedColumn,\n            onChange: e => setSelectedColumn(e.target.value),\n            style: {\n              minWidth: 180,\n              padding: '4px 8px',\n              borderRadius: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a column --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 17\n            }, this), availableColumns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: col,\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), renderBookingRateByColumn()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 543,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rx2hI2iJBIoNBwWOW7ko9nN5sKM=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Container","Row","Col","Card","Button","Alert","Spinner","Badge","Dropdown","ButtonGroup","Table","useDropzone","axios","saveAs","FiUpload","FiDownload","FiDatabase","FiSun","FiMoon","FiClock","FiInfo","ProjectFilters","DataStats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_predictions$stats$ro","_predictions$stats","_predictions$stats$pr","_predictions$stats2","fileData","setFileData","predictions","setPredictions","loading","setLoading","error","setError","darkMode","setDarkMode","localStorage","getItem","showPreview","setShowPreview","fileInfo","setFileInfo","storageStats","setStorageStats","selectedProject","setSelectedProject","availableProjects","setAvailableProjects","fullDataset","setFullDataset","filteredData","setFilteredData","filterLoading","setFilterLoading","previewNumRows","setPreviewNumRows","previewSection","setPreviewSection","selectedColumn","setSelectedColumn","availableColumns","currentData","Object","keys","filter","c","fetchAvailableModels","fetchStorageStats","document","body","classList","toggle","setItem","response","get","console","log","data","available_models","extractProjects","length","projects","Set","forEach","row","projectid","add","toString","Array","from","filterDataByProject","projectId","setTimeout","filtered","handleProjectFilter","handleFilterReset","previewOptions","sectionOptions","value","label","previewRows","n","slice","firstN","lastN","onDrop","acceptedFiles","file","formData","FormData","append","post","headers","full_dataset","filename","preview","originalName","name","file_info","fullDatasetRows","_error$response","_error$response$data","getRootProps","getInputProps","isDragActive","accept","multiple","generatePredictions","fullPredictionData","_error$response2","_error$response2$data","exportResults","format","results_filename","responseType","extension","split","cleanup","renderPreviewTable","title","columns","includes","concat","className","children","Header","animation","size","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","column","index","_row$column","renderPreviewControls","_sectionOptions$find","as","onSelect","val","Number","variant","Toggle","id","Menu","opt","Item","eventKey","find","o","renderFileRetentionInfo","uploadDate","Date","upload_timestamp","deletionDate","deletion_date","daysLeft","Math","ceil","md","toLocaleString","bg","status","renderStorageStats","total_files","total_size_mb","retention_days","onClick","renderPredictionStats","total","totalCols","numericCols","categoricalCols","col","isNaN","predCol","has_booked_prediction","missingCount","v","undefined","classCounts","classPercents","toFixed","style","color","fontSize","display","gap","flexWrap","marginBottom","fontWeight","margin","background","borderRadius","padding","marginTop","marginLeft","renderBookingRateByColumn","groups","_row$selectedColumn","booked","summary","entries","obj","percent","sort","a","b","parseFloat","item","idx","fluid","dm","lg","dismissible","onClose","role","disabled","onReset","stats","rows_processed","JSON","stringify","prediction_distribution","justifyContent","minWidth","htmlFor","marginRight","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Khang Vinh Khac/Documents/web_dev/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge, Dropdown, ButtonGroup, Table } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\n\nfunction App() {\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n  \n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n  const [previewNumRows, setPreviewNumRows] = useState(5);\n  const [previewSection, setPreviewSection] = useState('both'); // 'head', 'tail', 'both'\n\n  // --- Column Booking Rate Analysis ---\n  const [selectedColumn, setSelectedColumn] = useState('');\n  // Get available columns (categorical only, not has_booked_prediction)\n  const availableColumns = useMemo(() => {\n    if (!currentData || !currentData[0]) return [];\n    return Object.keys(currentData[0]).filter(\n      c => c !== 'has_booked_prediction' && c !== 'projectid' && typeof currentData[0][c] !== 'number'\n    );\n  }, [currentData]);\n\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback((data) => {\n    if (!data || data.length === 0) return [];\n    \n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    \n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    \n    setFilterLoading(true);\n    \n    // Use setTimeout to prevent UI blocking for large datasets\n    setTimeout(() => {\n      const filtered = data.filter(row => \n        row.projectid && row.projectid.toString() === projectId.toString()\n      );\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback((projectId) => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      filterDataByProject(fullDataset, projectId);\n    } else {\n      setFilteredData(fullDataset);\n    }\n  }, [fullDataset, filterDataByProject]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(fullDataset);\n  }, [fullDataset]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    return selectedProject ? filteredData : fullDataset;\n  }, [selectedProject, filteredData, fullDataset]);\n\n  // --- Preview Controls ---\n  const previewOptions = [5, 10, 50];\n  const sectionOptions = [\n    { value: 'head', label: 'Head' },\n    { value: 'tail', label: 'Tail' },\n    { value: 'both', label: 'Head & Tail' },\n  ];\n\n  // --- Updated previewRows logic ---\n  const previewRows = useMemo(() => {\n    if (!currentData || currentData.length === 0) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return currentData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return currentData.slice(-n);\n    } else { // both\n      if (currentData.length <= 2 * n) {\n        return currentData;\n      }\n      const firstN = currentData.slice(0, n);\n      const lastN = currentData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [currentData, previewNumRows, previewSection]);\n\n  const onDrop = async (acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      // Cache the full dataset for filtering (all rows)\n      setFullDataset(response.data.full_dataset);\n      setFilteredData(response.data.full_dataset);\n      \n      // Extract available projects from the full dataset\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      \n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,  // Keep preview for display\n        originalName: file.name,\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n      \n      // Reset filter state\n      setSelectedProject(null);\n      \n      console.log('Uploaded fileData:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: response.data.full_dataset.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects,\n      });\n    } catch (error) {\n      setError(error.response?.data?.error || 'Error uploading file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls'],\n    },\n    multiple: false,\n  });\n\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename,\n      });\n      \n      // Cache the full prediction dataset for filtering (all rows)\n      const fullPredictionData = response.data.full_dataset;\n      setFullDataset(fullPredictionData);\n      setFilteredData(fullPredictionData);\n      \n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(fullPredictionData);\n      setAvailableProjects(projects);\n      \n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n      \n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      setError(error.response?.data?.error || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Export logic ---\n  const exportResults = async (format) => {\n    if (!predictions) return;\n    try {\n      const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n        responseType: 'blob',\n      });\n      let extension = format;\n      if (format === 'xlsx') extension = 'xlsx';\n      if (format === 'csv') extension = 'csv';\n      if (format === 'json') extension = 'json';\n      saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n    \n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    \n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    \n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            {title}\n            {filterLoading && (\n              <Spinner animation=\"border\" size=\"sm\" className=\"ms-2\" />\n            )}\n          </h5>\n        </Card.Header>\n        <Card.Body className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped table-hover mb-0\">\n              <thead className=\"table-primary\">\n                <tr>\n                  {columns.map((column) => (\n                    <th key={column}>{column}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((column) => (\n                      <td key={column}>\n                        {typeof row[column] === 'boolean' \n                          ? (row[column] ? 'Yes' : 'No')\n                          : row[column]?.toString() || ''}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  // --- Preview controls UI ---\n  const renderPreviewControls = () => (\n    <div className=\"d-flex align-items-center gap-3 mb-2\">\n      <span>Preview:</span>\n      <Dropdown as={ButtonGroup} onSelect={val => setPreviewNumRows(Number(val))}>\n        <Button variant=\"outline-primary\">{previewNumRows} rows</Button>\n        <Dropdown.Toggle split variant=\"outline-primary\" id=\"dropdown-split-basic\" />\n        <Dropdown.Menu>\n          {previewOptions.map(opt => (\n            <Dropdown.Item key={opt} eventKey={opt}>{opt} rows</Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown as={ButtonGroup} onSelect={val => setPreviewSection(val)}>\n        <Button variant=\"outline-secondary\">{sectionOptions.find(o => o.value === previewSection)?.label}</Button>\n        <Dropdown.Toggle split variant=\"outline-secondary\" id=\"dropdown-split-section\" />\n        <Dropdown.Menu>\n          {sectionOptions.map(opt => (\n            <Dropdown.Item key={opt.value} eventKey={opt.value}>{opt.label}</Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiClock className=\"me-2\" />\n            File Retention Information\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={6}>\n              <p><strong>Upload Time:</strong> {uploadDate.toLocaleString()}</p>\n              <p><strong>Deletion Date:</strong> {deletionDate.toLocaleString()}</p>\n            </Col>\n            <Col md={6}>\n              <p><strong>Days Remaining:</strong> \n                <Badge \n                  bg={daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger'}\n                  className=\"ms-2\"\n                >\n                  {daysLeft} days\n                </Badge>\n              </p>\n              <p><strong>Status:</strong> \n                <Badge bg=\"info\" className=\"ms-2\">{fileInfo.status}</Badge>\n              </p>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiInfo className=\"me-2\" />\n            Storage Statistics\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-primary\">{storageStats.total_files}</div>\n                <div className=\"text-muted\">Total Files</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-info\">{storageStats.total_size_mb} MB</div>\n                <div className=\"text-muted\">Total Size</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-success\">{storageStats.retention_days}</div>\n                <div className=\"text-muted\">Retention Days</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <Button \n                  variant=\"outline-secondary\" \n                  size=\"sm\"\n                  onClick={fetchStorageStats}\n                >\n                  <FiInfo className=\"me-1\" />\n                  Refresh\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  // --- Compute and Render Prediction Statistics (per project or overall) ---\n  const renderPredictionStats = () => {\n    // Use filtered data (currentData) for per-project stats\n    const data = currentData;\n    if (!data || data.length === 0) return null;\n    const total = data.length;\n    const totalCols = data[0] ? Object.keys(data[0]).length : 0;\n    // Count numeric and categorical columns\n    let numericCols = 0, categoricalCols = 0;\n    if (data[0]) {\n      Object.keys(data[0]).forEach(col => {\n        const val = data[0][col];\n        if (typeof val === 'number' && !isNaN(val)) numericCols++;\n        else categoricalCols++;\n      });\n    }\n    const predCol = data.map(row => row.has_booked_prediction);\n    const missingCount = predCol.filter(v => v === null || v === undefined || v === '' || (typeof v === 'number' && isNaN(v))).length;\n    // const missingPct = total ? ((100 * missingCount) / total).toFixed(2) : '0.00';\n    // Count each class\n    const classCounts = { '0': 0, '1': 0 };\n    predCol.forEach(v => {\n      if (v === 0 || v === '0') classCounts['0']++;\n      else if (v === 1 || v === '1') classCounts['1']++;\n    });\n    // Percent for each class\n    const classPercents = {\n      '0': total ? ((100 * classCounts['0']) / total).toFixed(2) + '%' : '0.00%',\n      '1': total ? ((100 * classCounts['1']) / total).toFixed(2) + '%' : '0.00%'\n    };\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\" style={{ color: 'var(--bs-body-color)' }}>Project {selectedProject ? selectedProject : 'All'} Prediction Statistics</h5>\n        </Card.Header>\n        <Card.Body>\n          <div style={{ fontSize: '1.1rem', color: 'var(--bs-body-color)' }}>\n            <div style={{ display: 'flex', gap: 32, flexWrap: 'wrap', marginBottom: 8 }}>\n              <div><span style={{ color: '#1976d2', fontWeight: 700, fontSize: 22 }}>{total}</span><br />Total Rows</div>\n              <div><span style={{ color: '#00bcd4', fontWeight: 700, fontSize: 22 }}>{totalCols}</span><br />Total Columns</div>\n              <div><span style={{ color: '#43a047', fontWeight: 700, fontSize: 22 }}>{numericCols}</span><br />Numeric Columns</div>\n              <div><span style={{ color: '#ffc107', fontWeight: 700, fontSize: 22 }}>{categoricalCols}</span><br />Categorical Columns</div>\n            </div>\n            <div style={{ margin: '12px 0' }}>\n              <span style={{ fontWeight: 600, background: 'var(--bs-secondary-bg, #f5f5f5)', borderRadius: 16, padding: '6px 16px', display: 'inline-block', color: 'var(--bs-body-color)' }}>\n                {missingCount.toLocaleString()} missing values detected\n              </span>\n            </div>\n            <div style={{ marginTop: 12, fontWeight: 600 }}>Prediction Results:</div>\n            <div style={{ marginLeft: 12, marginTop: 4 }}>\n              <div style={{ color: '#388e3c', marginBottom: 2 }}>\n                Likely to book: <span style={{ fontWeight: 700 }}>{classCounts['1']}</span> <span style={{ color: '#888', fontWeight: 400 }}>({classPercents['1']})</span>\n              </div>\n              <div style={{ color: '#d32f2f' }}>\n                Unlikely to book: <span style={{ fontWeight: 700 }}>{classCounts['0']}</span> <span style={{ color: '#888', fontWeight: 400 }}>({classPercents['0']})</span>\n              </div>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  // --- Column Booking Rate Analysis ---\n  const renderBookingRateByColumn = () => {\n    if (!selectedColumn || !currentData || !currentData[0]) return null;\n    // Group by value\n    const groups = {};\n    currentData.forEach(row => {\n      const val = row[selectedColumn] ?? 'Missing';\n      if (!groups[val]) groups[val] = { total: 0, booked: 0 };\n      groups[val].total++;\n      if (row.has_booked_prediction === 1 || row.has_booked_prediction === '1') groups[val].booked++;\n    });\n    // Compute percent and sort by booking rate\n    const summary = Object.entries(groups).map(([val, obj]) => ({\n      value: val,\n      total: obj.total,\n      booked: obj.booked,\n      percent: obj.total ? ((100 * obj.booked) / obj.total).toFixed(2) + '%' : '0.00%'\n    }));\n    summary.sort((a, b) => parseFloat(b.percent) - parseFloat(a.percent));\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h6 className=\"mb-0\">Booking Rate by <span style={{ color: '#1976d2' }}>{selectedColumn}</span> {selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}</h6>\n        </Card.Header>\n        <Card.Body>\n          <div style={{ fontSize: '1.05rem', color: 'var(--bs-body-color)' }}>\n            <div style={{ marginBottom: 8 }}>Top 5 values most likely to book:</div>\n            <ul style={{ marginBottom: 0 }}>\n              {summary.slice(0, 5).map((item, idx) => (\n                <li key={item.value + idx}>\n                  <span style={{ fontWeight: 500 }}>{item.value}:</span> {item.booked} / {item.total} <span style={{ color: '#388e3c', fontWeight: 600 }}>({item.percent})</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  return (\n    <Container fluid className=\"upload-container\">\n      <button\n        className=\"theme-toggle\"\n        onClick={() => setDarkMode((dm) => !dm)}\n        title={darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n      >\n        {darkMode ? <FiMoon /> : <FiSun />}\n      </button>\n      <Row className=\"justify-content-center\">\n        <Col lg={10}>\n          <div className=\"text-center mb-4\">\n            <h1 className=\"display-4 text-primary\">ML Prediction System</h1>\n            <p className=\"lead text-muted\">\n              Upload your CSV or Excel files to get predictions using our pre-trained models\n            </p>\n          </div>\n\n          {error && (\n            <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\n              {error}\n            </Alert>\n          )}\n\n          {!fileData && (\n            <Card>\n              <Card.Body>\n                <div\n                  {...getRootProps()}\n                  className={`upload-area ${isDragActive ? 'dragover' : ''}`}\n                >\n                  <input {...getInputProps()} />\n                  <FiUpload size={48} className=\"text-primary mb-3\" />\n                  <h4>Drop your file here, or click to select</h4>\n                  <p className=\"text-muted\" style={{ color: 'var(--bs-body-color)' }}>\n                    Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\n                  </p>\n                  <p className=\"text-muted small\" style={{ color: 'var(--bs-body-color)' }}>\n                    File must contain a \"projectid\" column\n                  </p>\n                </div>\n              </Card.Body>\n            </Card>\n          )}\n\n          {loading && (\n            <div className=\"loading-spinner\">\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\" className=\"mb-3\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n                <p>Processing your file...</p>\n              </div>\n            </div>\n          )}\n\n          {fileData && !loading && showPreview && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">File Information</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Filename:</strong> {fileData.originalName || fileData.filename}</p>\n                    </Col>\n                    <Col md={6}>\n                      <Button\n                        variant=\"primary\"\n                        onClick={generatePredictions}\n                        disabled={loading || !fileData}\n                        className=\"me-2\"\n                      >\n                        <FiDatabase className=\"me-2\" />\n                        Generate Predictions\n                      </Button>\n                      <Button variant=\"outline-secondary\" onClick={cleanup}>\n                        Upload New File\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              \n              {/* Project Filters */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Data Statistics */}\n              <DataStats\n                data={currentData}\n                title={selectedProject ? `Project ${selectedProject} Statistics` : \"Full Dataset Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {renderPreviewControls()}\n              {/* Preview Table */}\n              {(!previewRows || previewRows.length === 0) ? (\n                <Alert variant=\"warning\">No preview data available for this file.</Alert>\n              ) : (\n                renderPreviewTable(previewRows, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)\n              )}\n            </>\n          )}\n\n          {predictions && !loading && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">Prediction Results</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Rows Processed:</strong> {predictions.stats?.rows_processed ?? '-'}</p>\n                      <p><strong>Prediction Distribution:</strong> {JSON.stringify(predictions.stats?.prediction_distribution ?? {})}</p>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              {/* --- New Prediction Statistics Card --- */}\n              {renderPredictionStats()}\n              {/* Project Filters for Prediction Results */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Prediction Data Statistics */}\n              <DataStats\n                data={currentData}\n                title={selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {renderPreviewControls()}\n              {/* Final Prediction Preview */}\n              <h5>Final Prediction Preview</h5>\n              {renderPreviewTable(previewRows, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)}\n              \n              <Card>\n                <Card.Header>\n                  <h5 className=\"mb-0\">\n                    <FiDownload className=\"me-2\" />\n                    Export Results\n                  </h5>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"d-flex flex-wrap gap-2\">\n                    <Button\n                      variant=\"outline-primary\"\n                      onClick={() => exportResults('csv')}\n                      className=\"btn-export\"\n                    >\n                      Export as CSV\n                    </Button>\n                    <Button\n                      variant=\"outline-success\"\n                      onClick={() => exportResults('xlsx')}\n                      className=\"btn-export\"\n                    >\n                      Export as Excel\n                    </Button>\n                    <Button\n                      variant=\"outline-info\"\n                      onClick={() => exportResults('json')}\n                      className=\"btn-export\"\n                    >\n                      Export as JSON\n                    </Button>\n                  </div>\n                </Card.Body>\n              </Card>\n              {/* Upload New File button at the bottom */}\n              <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem', marginBottom: '1rem' }}>\n                <Button\n                  variant=\"secondary\"\n                  size=\"lg\"\n                  onClick={cleanup}\n                  style={{ minWidth: 220, fontWeight: 600 }}\n                >\n                  Upload New File\n                </Button>\n              </div>\n            </>\n          )}\n\n          {fileInfo && (\n            <>\n              {renderFileRetentionInfo()}\n              {renderStorageStats()}\n            </>\n          )}\n\n          {/* Column selector and booking rate summary */}\n          {predictions && !loading && availableColumns.length > 0 && (\n            <div className=\"mb-4\">\n              <label htmlFor=\"column-select\" style={{ fontWeight: 600, marginRight: 8, color: 'var(--bs-body-color)' }}>\n                Analyze by column:\n              </label>\n              <select\n                id=\"column-select\"\n                value={selectedColumn}\n                onChange={e => setSelectedColumn(e.target.value)}\n                style={{ minWidth: 180, padding: '4px 8px', borderRadius: 6 }}\n              >\n                <option value=\"\">-- Select a column --</option>\n                {availableColumns.map(col => (\n                  <option key={col} value={col}>{col}</option>\n                ))}\n              </select>\n              {renderBookingRateByColumn()}\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}