{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khang Vinh Khac\\\\Documents\\\\web_dev\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _predictions$stats$ro, _predictions$stats, _predictions$stats$pr, _predictions$stats2;\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n\n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n  const [previewNumRows, setPreviewNumRows] = useState(5);\n  const [previewSection, setPreviewSection] = useState('both'); // 'head', 'tail', 'both'\n\n  // After prediction, merge has_booked_prediction from full_dataset into processed_dataset for display\n  const [predictionDisplayData, setPredictionDisplayData] = useState(null);\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  useEffect(() => {\n    if (predictions && predictions.processed_dataset && predictions.full_dataset) {\n      const processed = predictions.processed_dataset;\n      const predicted = predictions.full_dataset;\n      console.log('Processed dataset:', processed);\n      console.log('Full dataset:', predicted);\n      const merged = processed.map((row, idx) => {\n        var _predicted$idx;\n        return {\n          ...row,\n          has_booked_prediction: (_predicted$idx = predicted[idx]) === null || _predicted$idx === void 0 ? void 0 : _predicted$idx.has_booked_prediction\n        };\n      });\n      console.log('Merged predictionDisplayData:', merged);\n      setPredictionDisplayData(merged);\n    }\n  }, [predictions]);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback(data => {\n    if (!data || data.length === 0) return [];\n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    setFilterLoading(true);\n    setTimeout(() => {\n      const filtered = data.filter(row => row.projectid && row.projectid.toString() === projectId.toString());\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback(projectId => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      if (predictions && predictionDisplayData) {\n        filterDataByProject(predictionDisplayData, projectId);\n      } else {\n        filterDataByProject(fullDataset, projectId);\n      }\n    } else {\n      setFilteredData(predictions && predictionDisplayData ? predictionDisplayData : fullDataset);\n    }\n  }, [fullDataset, filterDataByProject, predictions, predictionDisplayData]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(predictions && predictionDisplayData ? predictionDisplayData : fullDataset);\n  }, [fullDataset, predictions, predictionDisplayData]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    if (predictions && predictionDisplayData) {\n      return selectedProject ? predictionDisplayData.filter(row => row.projectid && row.projectid.toString() === selectedProject.toString()) : predictionDisplayData;\n    } else {\n      return selectedProject ? filteredData : fullDataset;\n    }\n  }, [selectedProject, filteredData, fullDataset, predictions, predictionDisplayData]);\n\n  // --- Preview Controls ---\n  const previewOptions = [5, 10, 50];\n  const sectionOptions = [{\n    value: 'head',\n    label: 'Head'\n  }, {\n    value: 'tail',\n    label: 'Tail'\n  }, {\n    value: 'both',\n    label: 'Head & Tail'\n  }];\n\n  // --- Updated previewRows logic ---\n  const previewRows = useMemo(() => {\n    if (!currentData || currentData.length === 0) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return currentData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return currentData.slice(-n);\n    } else {\n      // both\n      if (currentData.length <= 2 * n) {\n        return currentData;\n      }\n      const firstN = currentData.slice(0, n);\n      const lastN = currentData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [currentData, previewNumRows, previewSection]);\n\n  // Use predictionDisplayData for previewRows after prediction\n  const predictionRows = useMemo(() => {\n    if (!predictionDisplayData) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return predictionDisplayData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return predictionDisplayData.slice(-n);\n    } else {\n      if (predictionDisplayData.length <= 2 * n) {\n        return predictionDisplayData;\n      }\n      const firstN = predictionDisplayData.slice(0, n);\n      const lastN = predictionDisplayData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [predictionDisplayData, previewNumRows, previewSection]);\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Cache the full dataset for filtering (all rows)\n      setFullDataset(response.data.full_dataset);\n      setFilteredData(response.data.full_dataset);\n\n      // Extract available projects from the full dataset\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,\n        // Keep preview for display\n        originalName: file.name\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n\n      // Reset filter state\n      setSelectedProject(null);\n      console.log('Uploaded fileData:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: response.data.full_dataset.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error uploading file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls']\n    },\n    multiple: false\n  });\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename\n      });\n\n      // Cache the full prediction dataset for filtering (all rows)\n      const fullPredictionData = response.data.full_dataset;\n      setFullDataset(response.data.processed_dataset);\n      setFilteredData(response.data.processed_dataset);\n\n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n\n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Export logic ---\n  const exportResults = async format => {\n    if (!predictions) return;\n    try {\n      const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n        responseType: 'blob'\n      });\n      let extension = format;\n      if (format === 'xlsx') extension = 'xlsx';\n      if (format === 'csv') extension = 'csv';\n      if (format === 'json') extension = 'json';\n      saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n\n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [title, filterLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\",\n            className: \"ms-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-hover mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => {\n                  var _row$column;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: typeof row[column] === 'boolean' ? row[column] ? 'Yes' : 'No' : ((_row$column = row[column]) === null || _row$column === void 0 ? void 0 : _row$column.toString()) || ''\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this);\n  };\n\n  // --- Preview controls UI ---\n  const renderPreviewControls = () => {\n    var _sectionOptions$find;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center gap-3 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        onSelect: val => setPreviewNumRows(Number(val)),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          children: [previewNumRows, \" rows\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          split: true,\n          variant: \"outline-primary\",\n          id: \"dropdown-split-basic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: previewOptions.map(opt => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: opt,\n            children: [opt, \" rows\"]\n          }, opt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        as: ButtonGroup,\n        onSelect: val => setPreviewSection(val),\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: (_sectionOptions$find = sectionOptions.find(o => o.value === previewSection)) === null || _sectionOptions$find === void 0 ? void 0 : _sectionOptions$find.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          split: true,\n          variant: \"outline-secondary\",\n          id: \"dropdown-split-section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: sectionOptions.map(opt => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: opt.value,\n            children: opt.label\n          }, opt.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }, this);\n  };\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), \"File Retention Information\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Upload Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 18\n              }, this), \" \", uploadDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Deletion Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 18\n              }, this), \" \", deletionDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Days Remaining:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger',\n                className: \"ms-2\",\n                children: [daysLeft, \" days\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"info\",\n                className: \"ms-2\",\n                children: fileInfo.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), \"Storage Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-primary\",\n                children: storageStats.total_files\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-info\",\n                children: [storageStats.total_size_mb, \" MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-success\",\n                children: storageStats.retention_days\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Retention Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: fetchStorageStats,\n                children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), \"Refresh\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: () => setDarkMode(dm => !dm),\n      title: darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode',\n      children: darkMode ? /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 text-primary\",\n            children: \"ML Prediction System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-muted\",\n            children: \"Upload your CSV or Excel files to get predictions using our pre-trained models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          dismissible: true,\n          onClose: () => setError(null),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), !fileData && /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FiUpload, {\n                size: 48,\n                className: \"text-primary mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Drop your file here, or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted small\",\n                children: \"File must contain a \\\"projectid\\\" column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              role: \"status\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Processing your file...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), fileData && !loading && showPreview && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"File Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Filename:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 26\n                    }, this), \" \", fileData.originalName || fileData.filename]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: generatePredictions,\n                    disabled: loading || !fileData,\n                    className: \"me-2\",\n                    children: [/*#__PURE__*/_jsxDEV(FiDatabase, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 25\n                    }, this), \"Generate Predictions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: cleanup,\n                    children: \"Upload New File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: predictionDisplayData,\n            stats: predictions ? predictions.stats : {},\n            selectedProject: selectedProject,\n            title: selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), renderPreviewControls(), !previewRows || previewRows.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"No preview data available for this file.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 17\n          }, this) : renderPreviewTable(previewRows, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)]\n        }, void 0, true), predictions && !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"Prediction Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Rows Processed:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 26\n                    }, this), \" \", (_predictions$stats$ro = (_predictions$stats = predictions.stats) === null || _predictions$stats === void 0 ? void 0 : _predictions$stats.rows_processed) !== null && _predictions$stats$ro !== void 0 ? _predictions$stats$ro : '-']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Prediction Distribution:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 26\n                    }, this), \" \", JSON.stringify((_predictions$stats$pr = (_predictions$stats2 = predictions.stats) === null || _predictions$stats2 === void 0 ? void 0 : _predictions$stats2.prediction_distribution) !== null && _predictions$stats$pr !== void 0 ? _predictions$stats$pr : {})]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: predictionDisplayData,\n            stats: predictions ? predictions.stats : {},\n            selectedProject: selectedProject,\n            title: selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), renderPreviewControls(), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Final Prediction Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), renderPreviewTable(predictionRows, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`), /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(FiDownload, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 21\n                }, this), \"Export Results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-wrap gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  onClick: () => exportResults('csv'),\n                  className: \"btn-export\",\n                  children: \"Export as CSV\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-success\",\n                  onClick: () => exportResults('xlsx'),\n                  className: \"btn-export\",\n                  children: \"Export as Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-info\",\n                  onClick: () => exportResults('json'),\n                  className: \"btn-export\",\n                  children: \"Export as JSON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              marginTop: '2rem',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              size: \"lg\",\n              onClick: cleanup,\n              style: {\n                minWidth: 220,\n                fontWeight: 600\n              },\n              children: \"Upload New File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), fileInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderFileRetentionInfo(), renderStorageStats()]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gCRa4dCW/5KUDx6TAKg6LARqddU=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Container","Row","Col","Card","Button","Alert","Spinner","Badge","Dropdown","ButtonGroup","useDropzone","axios","saveAs","FiUpload","FiDownload","FiDatabase","FiSun","FiMoon","FiClock","FiInfo","ProjectFilters","DataStats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_predictions$stats$ro","_predictions$stats","_predictions$stats$pr","_predictions$stats2","fileData","setFileData","predictions","setPredictions","loading","setLoading","error","setError","darkMode","setDarkMode","localStorage","getItem","showPreview","setShowPreview","fileInfo","setFileInfo","storageStats","setStorageStats","selectedProject","setSelectedProject","availableProjects","setAvailableProjects","fullDataset","setFullDataset","filteredData","setFilteredData","filterLoading","setFilterLoading","previewNumRows","setPreviewNumRows","previewSection","setPreviewSection","predictionDisplayData","setPredictionDisplayData","fetchAvailableModels","fetchStorageStats","document","body","classList","toggle","setItem","processed_dataset","full_dataset","processed","predicted","console","log","merged","map","row","idx","_predicted$idx","has_booked_prediction","response","get","data","available_models","extractProjects","length","projects","Set","forEach","projectid","add","toString","Array","from","filterDataByProject","projectId","setTimeout","filtered","filter","handleProjectFilter","handleFilterReset","currentData","previewOptions","sectionOptions","value","label","previewRows","n","slice","firstN","lastN","predictionRows","onDrop","acceptedFiles","file","formData","FormData","append","post","headers","filename","preview","originalName","name","file_info","fullDatasetRows","_error$response","_error$response$data","getRootProps","getInputProps","isDragActive","accept","multiple","generatePredictions","fullPredictionData","_error$response2","_error$response2$data","exportResults","format","results_filename","responseType","extension","split","cleanup","renderPreviewTable","title","columns","Object","keys","includes","c","concat","className","children","Header","animation","size","fileName","_jsxFileName","lineNumber","columnNumber","Body","column","index","_row$column","renderPreviewControls","_sectionOptions$find","as","onSelect","val","Number","variant","Toggle","id","Menu","opt","Item","eventKey","find","o","renderFileRetentionInfo","uploadDate","Date","upload_timestamp","deletionDate","deletion_date","daysLeft","Math","ceil","md","toLocaleString","bg","status","renderStorageStats","total_files","total_size_mb","retention_days","onClick","fluid","dm","lg","dismissible","onClose","role","disabled","onReset","stats","rows_processed","JSON","stringify","prediction_distribution","style","display","justifyContent","marginTop","marginBottom","minWidth","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Khang Vinh Khac/Documents/web_dev/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\n\nfunction App() {\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n  \n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n  const [previewNumRows, setPreviewNumRows] = useState(5);\n  const [previewSection, setPreviewSection] = useState('both'); // 'head', 'tail', 'both'\n\n  // After prediction, merge has_booked_prediction from full_dataset into processed_dataset for display\n  const [predictionDisplayData, setPredictionDisplayData] = useState(null);\n\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  useEffect(() => {\n    if (predictions && predictions.processed_dataset && predictions.full_dataset) {\n      const processed = predictions.processed_dataset;\n      const predicted = predictions.full_dataset;\n      console.log('Processed dataset:', processed);\n      console.log('Full dataset:', predicted);\n      const merged = processed.map((row, idx) => ({ ...row, has_booked_prediction: predicted[idx]?.has_booked_prediction }));\n      console.log('Merged predictionDisplayData:', merged);\n      setPredictionDisplayData(merged);\n    }\n  }, [predictions]);\n\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback((data) => {\n    if (!data || data.length === 0) return [];\n    \n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    \n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    setFilterLoading(true);\n    setTimeout(() => {\n      const filtered = data.filter(row =>\n        row.projectid && row.projectid.toString() === projectId.toString()\n      );\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback((projectId) => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      if (predictions && predictionDisplayData) {\n        filterDataByProject(predictionDisplayData, projectId);\n      } else {\n        filterDataByProject(fullDataset, projectId);\n      }\n    } else {\n      setFilteredData(predictions && predictionDisplayData ? predictionDisplayData : fullDataset);\n    }\n  }, [fullDataset, filterDataByProject, predictions, predictionDisplayData]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(predictions && predictionDisplayData ? predictionDisplayData : fullDataset);\n  }, [fullDataset, predictions, predictionDisplayData]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    if (predictions && predictionDisplayData) {\n      return selectedProject\n        ? predictionDisplayData.filter(row => row.projectid && row.projectid.toString() === selectedProject.toString())\n        : predictionDisplayData;\n    } else {\n      return selectedProject ? filteredData : fullDataset;\n    }\n  }, [selectedProject, filteredData, fullDataset, predictions, predictionDisplayData]);\n\n  // --- Preview Controls ---\n  const previewOptions = [5, 10, 50];\n  const sectionOptions = [\n    { value: 'head', label: 'Head' },\n    { value: 'tail', label: 'Tail' },\n    { value: 'both', label: 'Head & Tail' },\n  ];\n\n  // --- Updated previewRows logic ---\n  const previewRows = useMemo(() => {\n    if (!currentData || currentData.length === 0) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return currentData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return currentData.slice(-n);\n    } else { // both\n      if (currentData.length <= 2 * n) {\n        return currentData;\n      }\n      const firstN = currentData.slice(0, n);\n      const lastN = currentData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [currentData, previewNumRows, previewSection]);\n\n  // Use predictionDisplayData for previewRows after prediction\n  const predictionRows = useMemo(() => {\n    if (!predictionDisplayData) return [];\n    const n = previewNumRows;\n    if (previewSection === 'head') {\n      return predictionDisplayData.slice(0, n);\n    } else if (previewSection === 'tail') {\n      return predictionDisplayData.slice(-n);\n    } else {\n      if (predictionDisplayData.length <= 2 * n) {\n        return predictionDisplayData;\n      }\n      const firstN = predictionDisplayData.slice(0, n);\n      const lastN = predictionDisplayData.slice(-n);\n      return [...firstN, ...lastN];\n    }\n  }, [predictionDisplayData, previewNumRows, previewSection]);\n\n  const onDrop = async (acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      // Cache the full dataset for filtering (all rows)\n      setFullDataset(response.data.full_dataset);\n      setFilteredData(response.data.full_dataset);\n      \n      // Extract available projects from the full dataset\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      \n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,  // Keep preview for display\n        originalName: file.name,\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n      \n      // Reset filter state\n      setSelectedProject(null);\n      \n      console.log('Uploaded fileData:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: response.data.full_dataset.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects,\n      });\n    } catch (error) {\n      setError(error.response?.data?.error || 'Error uploading file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls'],\n    },\n    multiple: false,\n  });\n\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename,\n      });\n      \n      // Cache the full prediction dataset for filtering (all rows)\n      const fullPredictionData = response.data.full_dataset;\n      setFullDataset(response.data.processed_dataset);\n      setFilteredData(response.data.processed_dataset);\n      \n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(response.data.full_dataset);\n      setAvailableProjects(projects);\n      \n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n      \n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      setError(error.response?.data?.error || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Export logic ---\n  const exportResults = async (format) => {\n    if (!predictions) return;\n    try {\n      const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n        responseType: 'blob',\n      });\n      let extension = format;\n      if (format === 'xlsx') extension = 'xlsx';\n      if (format === 'csv') extension = 'csv';\n      if (format === 'json') extension = 'json';\n      saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n    \n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    \n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    \n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            {title}\n            {filterLoading && (\n              <Spinner animation=\"border\" size=\"sm\" className=\"ms-2\" />\n            )}\n          </h5>\n        </Card.Header>\n        <Card.Body className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped table-hover mb-0\">\n              <thead className=\"table-primary\">\n                <tr>\n                  {columns.map((column) => (\n                    <th key={column}>{column}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((column) => (\n                      <td key={column}>\n                        {typeof row[column] === 'boolean' \n                          ? (row[column] ? 'Yes' : 'No')\n                          : row[column]?.toString() || ''}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  // --- Preview controls UI ---\n  const renderPreviewControls = () => (\n    <div className=\"d-flex align-items-center gap-3 mb-2\">\n      <span>Preview:</span>\n      <Dropdown as={ButtonGroup} onSelect={val => setPreviewNumRows(Number(val))}>\n        <Button variant=\"outline-primary\">{previewNumRows} rows</Button>\n        <Dropdown.Toggle split variant=\"outline-primary\" id=\"dropdown-split-basic\" />\n        <Dropdown.Menu>\n          {previewOptions.map(opt => (\n            <Dropdown.Item key={opt} eventKey={opt}>{opt} rows</Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown as={ButtonGroup} onSelect={val => setPreviewSection(val)}>\n        <Button variant=\"outline-secondary\">{sectionOptions.find(o => o.value === previewSection)?.label}</Button>\n        <Dropdown.Toggle split variant=\"outline-secondary\" id=\"dropdown-split-section\" />\n        <Dropdown.Menu>\n          {sectionOptions.map(opt => (\n            <Dropdown.Item key={opt.value} eventKey={opt.value}>{opt.label}</Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiClock className=\"me-2\" />\n            File Retention Information\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={6}>\n              <p><strong>Upload Time:</strong> {uploadDate.toLocaleString()}</p>\n              <p><strong>Deletion Date:</strong> {deletionDate.toLocaleString()}</p>\n            </Col>\n            <Col md={6}>\n              <p><strong>Days Remaining:</strong> \n                <Badge \n                  bg={daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger'}\n                  className=\"ms-2\"\n                >\n                  {daysLeft} days\n                </Badge>\n              </p>\n              <p><strong>Status:</strong> \n                <Badge bg=\"info\" className=\"ms-2\">{fileInfo.status}</Badge>\n              </p>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiInfo className=\"me-2\" />\n            Storage Statistics\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-primary\">{storageStats.total_files}</div>\n                <div className=\"text-muted\">Total Files</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-info\">{storageStats.total_size_mb} MB</div>\n                <div className=\"text-muted\">Total Size</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-success\">{storageStats.retention_days}</div>\n                <div className=\"text-muted\">Retention Days</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <Button \n                  variant=\"outline-secondary\" \n                  size=\"sm\"\n                  onClick={fetchStorageStats}\n                >\n                  <FiInfo className=\"me-1\" />\n                  Refresh\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  return (\n    <Container fluid className=\"upload-container\">\n      <button\n        className=\"theme-toggle\"\n        onClick={() => setDarkMode((dm) => !dm)}\n        title={darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n      >\n        {darkMode ? <FiMoon /> : <FiSun />}\n      </button>\n      <Row className=\"justify-content-center\">\n        <Col lg={10}>\n          <div className=\"text-center mb-4\">\n            <h1 className=\"display-4 text-primary\">ML Prediction System</h1>\n            <p className=\"lead text-muted\">\n              Upload your CSV or Excel files to get predictions using our pre-trained models\n            </p>\n          </div>\n\n          {error && (\n            <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\n              {error}\n            </Alert>\n          )}\n\n          {!fileData && (\n            <Card>\n              <Card.Body>\n                <div\n                  {...getRootProps()}\n                  className={`upload-area ${isDragActive ? 'dragover' : ''}`}\n                >\n                  <input {...getInputProps()} />\n                  <FiUpload size={48} className=\"text-primary mb-3\" />\n                  <h4>Drop your file here, or click to select</h4>\n                  <p className=\"text-muted\">\n                    Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\n                  </p>\n                  <p className=\"text-muted small\">\n                    File must contain a \"projectid\" column\n                  </p>\n                </div>\n              </Card.Body>\n            </Card>\n          )}\n\n          {loading && (\n            <div className=\"loading-spinner\">\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\" className=\"mb-3\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n                <p>Processing your file...</p>\n              </div>\n            </div>\n          )}\n\n          {fileData && !loading && showPreview && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">File Information</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Filename:</strong> {fileData.originalName || fileData.filename}</p>\n                    </Col>\n                    <Col md={6}>\n                      <Button\n                        variant=\"primary\"\n                        onClick={generatePredictions}\n                        disabled={loading || !fileData}\n                        className=\"me-2\"\n                      >\n                        <FiDatabase className=\"me-2\" />\n                        Generate Predictions\n                      </Button>\n                      <Button variant=\"outline-secondary\" onClick={cleanup}>\n                        Upload New File\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              \n              {/* Project Filters */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Data Statistics */}\n              <DataStats\n                data={predictionDisplayData}\n                stats={predictions ? predictions.stats : {}}\n                selectedProject={selectedProject}\n                title={selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {renderPreviewControls()}\n              {/* Preview Table */}\n              {(!previewRows || previewRows.length === 0) ? (\n                <Alert variant=\"warning\">No preview data available for this file.</Alert>\n              ) : (\n                renderPreviewTable(previewRows, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)\n              )}\n            </>\n          )}\n\n          {predictions && !loading && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">Prediction Results</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Rows Processed:</strong> {predictions.stats?.rows_processed ?? '-'}</p>\n                      <p><strong>Prediction Distribution:</strong> {JSON.stringify(predictions.stats?.prediction_distribution ?? {})}</p>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              \n              {/* Project Filters for Prediction Results */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Prediction Data Statistics */}\n              <DataStats\n                data={predictionDisplayData}\n                stats={predictions ? predictions.stats : {}}\n                selectedProject={selectedProject}\n                title={selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {renderPreviewControls()}\n              {/* Final Prediction Preview */}\n              <h5>Final Prediction Preview</h5>\n              {renderPreviewTable(predictionRows, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)}\n              \n              <Card>\n                <Card.Header>\n                  <h5 className=\"mb-0\">\n                    <FiDownload className=\"me-2\" />\n                    Export Results\n                  </h5>\n                </Card.Header>\n                <Card.Body>\n                  <div className=\"d-flex flex-wrap gap-2\">\n                    <Button\n                      variant=\"outline-primary\"\n                      onClick={() => exportResults('csv')}\n                      className=\"btn-export\"\n                    >\n                      Export as CSV\n                    </Button>\n                    <Button\n                      variant=\"outline-success\"\n                      onClick={() => exportResults('xlsx')}\n                      className=\"btn-export\"\n                    >\n                      Export as Excel\n                    </Button>\n                    <Button\n                      variant=\"outline-info\"\n                      onClick={() => exportResults('json')}\n                      className=\"btn-export\"\n                    >\n                      Export as JSON\n                    </Button>\n                  </div>\n                </Card.Body>\n              </Card>\n              {/* Upload New File button at the bottom */}\n              <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem', marginBottom: '1rem' }}>\n                <Button\n                  variant=\"secondary\"\n                  size=\"lg\"\n                  onClick={cleanup}\n                  style={{ minWidth: 220, fontWeight: 600 }}\n                >\n                  Upload New File\n                </Button>\n              </div>\n            </>\n          )}\n\n          {fileInfo && (\n            <>\n              {renderFileRetentionInfo()}\n              {renderStorageStats()}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}