{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khang Vinh Khac\\\\Documents\\\\web_dev\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _fileData$preview, _predictions$stats$ro, _predictions$stats, _predictions$stats$pr, _predictions$stats2;\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n\n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback(data => {\n    if (!data || data.length === 0) return [];\n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    setFilterLoading(true);\n\n    // Use setTimeout to prevent UI blocking for large datasets\n    setTimeout(() => {\n      const filtered = data.filter(row => row.projectid && row.projectid.toString() === projectId.toString());\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback(projectId => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      filterDataByProject(fullDataset, projectId);\n    } else {\n      setFilteredData(fullDataset);\n    }\n  }, [fullDataset, filterDataByProject]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(fullDataset);\n  }, [fullDataset]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    return selectedProject ? filteredData : fullDataset;\n  }, [selectedProject, filteredData, fullDataset]);\n\n  // Memoized display data for preview (first and last 5 rows)\n  const displayData = useMemo(() => {\n    console.log('Computing display data:', {\n      currentData: currentData === null || currentData === void 0 ? void 0 : currentData.length,\n      selectedProject,\n      filteredData: filteredData === null || filteredData === void 0 ? void 0 : filteredData.length,\n      fullDataset: fullDataset === null || fullDataset === void 0 ? void 0 : fullDataset.length\n    });\n    if (!currentData || currentData.length === 0) {\n      console.log('No current data available');\n      return [];\n    }\n    if (currentData.length <= 10) {\n      console.log('Using all data (<= 10 rows):', currentData.length);\n      return currentData;\n    }\n    const first5 = currentData.slice(0, 5);\n    const last5 = currentData.slice(-5);\n    const result = [...first5, ...last5];\n    console.log('Using first 5 + last 5 rows:', result.length);\n    return result;\n  }, [currentData]);\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n\n    // First check if backend is accessible\n    try {\n      await axios.get('/api/models', {\n        timeout: 5000\n      });\n    } catch (backendError) {\n      setError('Backend server is not accessible. Please ensure the backend is running on port 5000.');\n      setLoading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      console.log('Uploading file:', file.name, 'Size:', file.size);\n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 30000 // 30 second timeout\n      });\n      console.log('Upload successful:', response.data);\n\n      // Start with preview data\n      let fullDatasetData = response.data.preview;\n\n      // Only try to get full dataset for smaller files (< 10MB)\n      if (file.size < 10 * 1024 * 1024) {\n        try {\n          console.log('Attempting to fetch full dataset...');\n          const fullDatasetResponse = await axios.get(`/api/full_dataset/${response.data.filename}`, {\n            timeout: 60000 // 60 second timeout for large datasets\n          });\n          fullDatasetData = fullDatasetResponse.data;\n          console.log('Full dataset loaded:', fullDatasetData.length, 'rows');\n        } catch (fullDatasetError) {\n          console.warn('Could not load full dataset, using preview data for filtering:', fullDatasetError);\n          // Continue with preview data\n        }\n      } else {\n        console.log('File too large, using preview data only');\n      }\n      setFullDataset(fullDatasetData);\n      setFilteredData(fullDatasetData);\n\n      // Extract available projects from the data we have\n      const projects = extractProjects(fullDatasetData);\n      setAvailableProjects(projects);\n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,\n        originalName: file.name\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n\n      // Reset filter state\n      setSelectedProject(null);\n      console.log('Upload completed successfully:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: fullDatasetData.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects\n      });\n\n      // Debug state after setting\n      console.log('State after upload:', {\n        fileData: !!fileData,\n        showPreview,\n        fullDatasetLength: fullDatasetData.length,\n        filteredDataLength: fullDatasetData.length,\n        availableProjectsCount: projects.length\n      });\n    } catch (error) {\n      console.error('Upload error:', error);\n      let errorMessage = 'Error uploading file';\n      if (error.response) {\n        var _error$response$data;\n        // Server responded with error\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || `Server error: ${error.response.status}`;\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error: Could not connect to server. Please check if the backend is running.';\n      } else {\n        // Other error\n        errorMessage = error.message || 'Unknown error occurred';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls']\n    },\n    multiple: false\n  });\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename\n      });\n\n      // Try to get the full prediction dataset\n      let fullPredictionData = response.data.preview.final; // Fallback to preview\n      try {\n        const fullPredictionResponse = await axios.get(`/api/full_dataset/${response.data.results_filename}`);\n        fullPredictionData = fullPredictionResponse.data;\n      } catch (fullPredictionError) {\n        console.warn('Could not load full prediction dataset, using preview data:', fullPredictionError);\n        // Continue with preview data\n      }\n      setFullDataset(fullPredictionData);\n      setFilteredData(fullPredictionData);\n\n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(fullPredictionData);\n      setAvailableProjects(projects);\n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n\n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      var _error$response, _error$response$data2;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data2 = _error$response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.error) || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const exportResults = async format => {\n    if (!predictions) return;\n    try {\n      if (format === 'json') {\n        const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`);\n        const blob = new Blob([JSON.stringify(response.data, null, 2)], {\n          type: 'application/json'\n        });\n        saveAs(blob, `predictions_${fileData.filename.split('.')[0]}.json`);\n      } else {\n        const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n          responseType: 'blob'\n        });\n        const extension = format === 'csv' ? 'csv' : 'xlsx';\n        saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n      }\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n\n  // Export filtered data\n  const exportFilteredData = async format => {\n    if (!currentData || currentData.length === 0) {\n      setError('No data to export');\n      return;\n    }\n    try {\n      let blob, filename;\n      if (format === 'json') {\n        const jsonData = JSON.stringify(currentData, null, 2);\n        blob = new Blob([jsonData], {\n          type: 'application/json'\n        });\n        filename = `filtered_data_${selectedProject || 'all'}.json`;\n      } else if (format === 'csv') {\n        // Convert data to CSV\n        const headers = Object.keys(currentData[0]);\n        const csvContent = [headers.join(','), ...currentData.map(row => headers.map(header => {\n          const value = row[header];\n          // Escape commas and quotes in CSV\n          if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n            return `\"${value.replace(/\"/g, '\"\"')}\"`;\n          }\n          return value || '';\n        }).join(','))].join('\\n');\n        blob = new Blob([csvContent], {\n          type: 'text/csv'\n        });\n        filename = `filtered_data_${selectedProject || 'all'}.csv`;\n      } else if (format === 'xlsx') {\n        // For Excel, we'll need to use a library or convert to CSV first\n        // For now, let's use CSV format\n        const headers = Object.keys(currentData[0]);\n        const csvContent = [headers.join(','), ...currentData.map(row => headers.map(header => {\n          const value = row[header];\n          if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n            return `\"${value.replace(/\"/g, '\"\"')}\"`;\n          }\n          return value || '';\n        }).join(','))].join('\\n');\n        blob = new Blob([csvContent], {\n          type: 'text/csv'\n        });\n        filename = `filtered_data_${selectedProject || 'all'}.csv`;\n      }\n      if (blob) {\n        saveAs(blob, filename);\n      }\n    } catch (error) {\n      setError('Error exporting filtered data');\n    }\n  };\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n\n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [title, filterLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\",\n            className: \"ms-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-hover mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-primary\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column\n                }, column, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => {\n                  var _row$column;\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: typeof row[column] === 'boolean' ? row[column] ? 'Yes' : 'No' : ((_row$column = row[column]) === null || _row$column === void 0 ? void 0 : _row$column.toString()) || ''\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this);\n  };\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), \"File Retention Information\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Upload Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 18\n              }, this), \" \", uploadDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Deletion Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 18\n              }, this), \" \", deletionDate.toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Days Remaining:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger',\n                className: \"ms-2\",\n                children: [daysLeft, \" days\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"info\",\n                className: \"ms-2\",\n                children: fileInfo.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), \"Storage Statistics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-primary\",\n                children: storageStats.total_files\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-info\",\n                children: [storageStats.total_size_mb, \" MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-number text-success\",\n                children: storageStats.retention_days\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: \"Retention Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: fetchStorageStats,\n                children: [/*#__PURE__*/_jsxDEV(FiInfo, {\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, this), \"Refresh\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: () => setDarkMode(dm => !dm),\n      title: darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode',\n      children: darkMode ? /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4 text-primary\",\n            children: \"ML Prediction System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-muted\",\n            children: \"Upload your CSV or Excel files to get predictions using our pre-trained models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          dismissible: true,\n          onClose: () => setError(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Upload Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), error, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted mt-2 d-block\",\n              children: [\"Please check:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"mb-0 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"File format is CSV, XLSX, or XLS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"File contains a \\\"projectid\\\" column\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Backend server is running on port 5000\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"File size is reasonable (< 100MB)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-danger\",\n              size: \"sm\",\n              className: \"mt-2\",\n              onClick: () => setError(null),\n              children: \"Try Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this), !fileData && /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FiUpload, {\n                size: 48,\n                className: \"text-primary mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Drop your file here, or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted small\",\n                children: \"File must contain a \\\"projectid\\\" column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-size-info\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"\\uD83D\\uDCA1 Tip: For files larger than 10MB, only preview data will be available for filtering\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              role: \"status\",\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Processing your file...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"This may take a few moments for large files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), fileData && !loading && showPreview && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"File Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Filename:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 26\n                    }, this), \" \", fileData.originalName || fileData.filename]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Data Rows:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 26\n                    }, this), \" \", (fullDataset === null || fullDataset === void 0 ? void 0 : fullDataset.length) || ((_fileData$preview = fileData.preview) === null || _fileData$preview === void 0 ? void 0 : _fileData$preview.length) || 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Display Rows:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 26\n                    }, this), \" \", (displayData === null || displayData === void 0 ? void 0 : displayData.length) || 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: generatePredictions,\n                    disabled: loading || !fileData,\n                    className: \"me-2\",\n                    children: [/*#__PURE__*/_jsxDEV(FiDatabase, {\n                      className: \"me-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 25\n                    }, this), \"Generate Predictions\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: cleanup,\n                    children: \"Upload New File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: currentData,\n            title: selectedProject ? `Project ${selectedProject} Statistics` : \"Full Dataset Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this), !displayData || displayData.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"No preview data available for this file.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }, this) : renderPreviewTable(displayData, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)]\n        }, void 0, true), predictions && !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"Prediction Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Rows Processed:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 685,\n                      columnNumber: 26\n                    }, this), \" \", (_predictions$stats$ro = (_predictions$stats = predictions.stats) === null || _predictions$stats === void 0 ? void 0 : _predictions$stats.rows_processed) !== null && _predictions$stats$ro !== void 0 ? _predictions$stats$ro : '-']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Prediction Distribution:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 26\n                    }, this), \" \", JSON.stringify((_predictions$stats$pr = (_predictions$stats2 = predictions.stats) === null || _predictions$stats2 === void 0 ? void 0 : _predictions$stats2.prediction_distribution) !== null && _predictions$stats$pr !== void 0 ? _predictions$stats$pr : {})]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ProjectFilters, {\n            projects: availableProjects,\n            selectedProject: selectedProject,\n            onSelect: handleProjectFilter,\n            onReset: handleFilterReset,\n            disabled: loading,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DataStats, {\n            data: currentData,\n            title: selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\",\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Final Prediction Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this), renderPreviewTable(displayData, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`), /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(FiDownload, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 21\n                }, this), \"Export Results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Export Full Prediction Results\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2 mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-primary\",\n                      size: \"sm\",\n                      onClick: () => exportResults('csv'),\n                      className: \"btn-export\",\n                      children: \"Export as CSV\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-success\",\n                      size: \"sm\",\n                      onClick: () => exportResults('xlsx'),\n                      className: \"btn-export\",\n                      children: \"Export as Excel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-info\",\n                      size: \"sm\",\n                      onClick: () => exportResults('json'),\n                      className: \"btn-export\",\n                      children: \"Export as JSON\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Export Filtered Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-warning\",\n                      size: \"sm\",\n                      onClick: () => exportFilteredData('csv'),\n                      className: \"btn-export\",\n                      disabled: !currentData || currentData.length === 0,\n                      children: \"Export Filtered CSV\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline-secondary\",\n                      size: \"sm\",\n                      onClick: () => exportFilteredData('json'),\n                      className: \"btn-export\",\n                      disabled: !currentData || currentData.length === 0,\n                      children: \"Export Filtered JSON\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 23\n                  }, this), selectedProject && /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted d-block mt-1\",\n                    children: [\"Exporting data for Project \", selectedProject]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              marginTop: '2rem',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              size: \"lg\",\n              onClick: cleanup,\n              style: {\n                minWidth: 220,\n                fontWeight: 600\n              },\n              children: \"Upload New File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), fileInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [renderFileRetentionInfo(), renderStorageStats()]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 534,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u8fOdESeW8YDpXdDIFiTWtFJZPo=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Container","Row","Col","Card","Button","Alert","Spinner","Badge","useDropzone","axios","saveAs","FiUpload","FiDownload","FiDatabase","FiSun","FiMoon","FiClock","FiInfo","ProjectFilters","DataStats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_fileData$preview","_predictions$stats$ro","_predictions$stats","_predictions$stats$pr","_predictions$stats2","fileData","setFileData","predictions","setPredictions","loading","setLoading","error","setError","darkMode","setDarkMode","localStorage","getItem","showPreview","setShowPreview","fileInfo","setFileInfo","storageStats","setStorageStats","selectedProject","setSelectedProject","availableProjects","setAvailableProjects","fullDataset","setFullDataset","filteredData","setFilteredData","filterLoading","setFilterLoading","fetchAvailableModels","fetchStorageStats","document","body","classList","toggle","setItem","response","get","console","log","data","available_models","extractProjects","length","projects","Set","forEach","row","projectid","add","toString","Array","from","filterDataByProject","projectId","setTimeout","filtered","filter","handleProjectFilter","handleFilterReset","currentData","displayData","first5","slice","last5","result","onDrop","acceptedFiles","file","timeout","backendError","formData","FormData","append","name","size","post","headers","fullDatasetData","preview","fullDatasetResponse","filename","fullDatasetError","warn","originalName","file_info","previewRows","fullDatasetRows","fullDatasetLength","filteredDataLength","availableProjectsCount","errorMessage","_error$response$data","status","request","message","getRootProps","getInputProps","isDragActive","accept","multiple","generatePredictions","fullPredictionData","final","fullPredictionResponse","results_filename","fullPredictionError","_error$response","_error$response$data2","exportResults","format","blob","Blob","JSON","stringify","type","split","responseType","extension","exportFilteredData","jsonData","Object","keys","csvContent","join","map","header","value","includes","replace","cleanup","renderPreviewTable","title","columns","c","concat","className","children","Header","animation","fileName","_jsxFileName","lineNumber","columnNumber","Body","column","index","_row$column","renderFileRetentionInfo","uploadDate","Date","upload_timestamp","deletionDate","deletion_date","daysLeft","Math","ceil","md","toLocaleString","bg","renderStorageStats","total_files","total_size_mb","retention_days","variant","onClick","fluid","dm","lg","dismissible","onClose","role","disabled","onSelect","onReset","stats","rows_processed","prediction_distribution","style","display","justifyContent","marginTop","marginBottom","minWidth","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Khang Vinh Khac/Documents/web_dev/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Badge } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { FiUpload, FiDownload, FiDatabase, FiSun, FiMoon, FiClock, FiInfo } from 'react-icons/fi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Import new components\nimport ProjectFilters from './components/ProjectFilters';\nimport DataStats from './components/DataStats';\n\nfunction App() {\n  const [fileData, setFileData] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(() => {\n    // Persist mode in localStorage\n    return localStorage.getItem('darkMode') === 'true';\n  });\n  const [showPreview, setShowPreview] = useState(true);\n  const [fileInfo, setFileInfo] = useState(null);\n  const [storageStats, setStorageStats] = useState(null);\n  \n  // Project filtering state\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [fullDataset, setFullDataset] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [filterLoading, setFilterLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch available models on component mount\n    fetchAvailableModels();\n    fetchStorageStats();\n  }, []);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n    document.body.classList.toggle('light-mode', !darkMode);\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await axios.get('/api/models');\n      // We'll use this data later if needed\n      console.log('Available models:', response.data.available_models);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  const fetchStorageStats = async () => {\n    try {\n      const response = await axios.get('/api/storage/stats');\n      setStorageStats(response.data);\n    } catch (error) {\n      console.error('Error fetching storage stats:', error);\n    }\n  };\n\n  // Extract unique projects from data\n  const extractProjects = useCallback((data) => {\n    if (!data || data.length === 0) return [];\n    \n    const projects = new Set();\n    data.forEach(row => {\n      if (row.projectid) {\n        projects.add(row.projectid.toString());\n      }\n    });\n    \n    return Array.from(projects);\n  }, []);\n\n  // Filter data by project\n  const filterDataByProject = useCallback((data, projectId) => {\n    if (!data || !projectId) return data;\n    \n    setFilterLoading(true);\n    \n    // Use setTimeout to prevent UI blocking for large datasets\n    setTimeout(() => {\n      const filtered = data.filter(row => \n        row.projectid && row.projectid.toString() === projectId.toString()\n      );\n      setFilteredData(filtered);\n      setFilterLoading(false);\n    }, 0);\n  }, []);\n\n  // Handle project selection\n  const handleProjectFilter = useCallback((projectId) => {\n    setSelectedProject(projectId);\n    if (projectId) {\n      filterDataByProject(fullDataset, projectId);\n    } else {\n      setFilteredData(fullDataset);\n    }\n  }, [fullDataset, filterDataByProject]);\n\n  // Handle filter reset\n  const handleFilterReset = useCallback(() => {\n    setSelectedProject(null);\n    setFilteredData(fullDataset);\n  }, [fullDataset]);\n\n  // Memoized current data (either filtered or full dataset)\n  const currentData = useMemo(() => {\n    return selectedProject ? filteredData : fullDataset;\n  }, [selectedProject, filteredData, fullDataset]);\n\n  // Memoized display data for preview (first and last 5 rows)\n  const displayData = useMemo(() => {\n    console.log('Computing display data:', {\n      currentData: currentData?.length,\n      selectedProject,\n      filteredData: filteredData?.length,\n      fullDataset: fullDataset?.length\n    });\n    \n    if (!currentData || currentData.length === 0) {\n      console.log('No current data available');\n      return [];\n    }\n    \n    if (currentData.length <= 10) {\n      console.log('Using all data (<= 10 rows):', currentData.length);\n      return currentData;\n    }\n    \n    const first5 = currentData.slice(0, 5);\n    const last5 = currentData.slice(-5);\n    const result = [...first5, ...last5];\n    console.log('Using first 5 + last 5 rows:', result.length);\n    return result;\n  }, [currentData]);\n\n  const onDrop = async (acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    setLoading(true);\n    setError(null);\n\n    // First check if backend is accessible\n    try {\n      await axios.get('/api/models', { timeout: 5000 });\n    } catch (backendError) {\n      setError('Backend server is not accessible. Please ensure the backend is running on port 5000.');\n      setLoading(false);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      console.log('Uploading file:', file.name, 'Size:', file.size);\n      \n      const response = await axios.post('/api/upload_uuid', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        timeout: 30000, // 30 second timeout\n      });\n      \n      console.log('Upload successful:', response.data);\n      \n      // Start with preview data\n      let fullDatasetData = response.data.preview;\n      \n      // Only try to get full dataset for smaller files (< 10MB)\n      if (file.size < 10 * 1024 * 1024) {\n        try {\n          console.log('Attempting to fetch full dataset...');\n          const fullDatasetResponse = await axios.get(`/api/full_dataset/${response.data.filename}`, {\n            timeout: 60000, // 60 second timeout for large datasets\n          });\n          fullDatasetData = fullDatasetResponse.data;\n          console.log('Full dataset loaded:', fullDatasetData.length, 'rows');\n        } catch (fullDatasetError) {\n          console.warn('Could not load full dataset, using preview data for filtering:', fullDatasetError);\n          // Continue with preview data\n        }\n      } else {\n        console.log('File too large, using preview data only');\n      }\n      \n      setFullDataset(fullDatasetData);\n      setFilteredData(fullDatasetData);\n      \n      // Extract available projects from the data we have\n      const projects = extractProjects(fullDatasetData);\n      setAvailableProjects(projects);\n      \n      setFileData({\n        filename: response.data.filename,\n        preview: response.data.preview,\n        originalName: file.name,\n      });\n      setFileInfo(response.data.file_info);\n      setShowPreview(true);\n      \n      // Reset filter state\n      setSelectedProject(null);\n      \n      console.log('Upload completed successfully:', {\n        filename: response.data.filename,\n        previewRows: response.data.preview.length,\n        fullDatasetRows: fullDatasetData.length,\n        originalName: file.name,\n        fileInfo: response.data.file_info,\n        availableProjects: projects,\n      });\n      \n      // Debug state after setting\n      console.log('State after upload:', {\n        fileData: !!fileData,\n        showPreview,\n        fullDatasetLength: fullDatasetData.length,\n        filteredDataLength: fullDatasetData.length,\n        availableProjectsCount: projects.length\n      });\n    } catch (error) {\n      console.error('Upload error:', error);\n      let errorMessage = 'Error uploading file';\n      \n      if (error.response) {\n        // Server responded with error\n        errorMessage = error.response.data?.error || `Server error: ${error.response.status}`;\n      } else if (error.request) {\n        // Network error\n        errorMessage = 'Network error: Could not connect to server. Please check if the backend is running.';\n      } else {\n        // Other error\n        errorMessage = error.message || 'Unknown error occurred';\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'text/csv': ['.csv'],\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': ['.xlsx'],\n      'application/vnd.ms-excel': ['.xls'],\n    },\n    multiple: false,\n  });\n\n  const generatePredictions = async () => {\n    if (!fileData) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post('/api/predict_workflow', {\n        filename: fileData.filename,\n      });\n      \n      // Try to get the full prediction dataset\n      let fullPredictionData = response.data.preview.final; // Fallback to preview\n      try {\n        const fullPredictionResponse = await axios.get(`/api/full_dataset/${response.data.results_filename}`);\n        fullPredictionData = fullPredictionResponse.data;\n      } catch (fullPredictionError) {\n        console.warn('Could not load full prediction dataset, using preview data:', fullPredictionError);\n        // Continue with preview data\n      }\n      \n      setFullDataset(fullPredictionData);\n      setFilteredData(fullPredictionData);\n      \n      // Re-extract projects from prediction data (in case preprocessing changed project IDs)\n      const projects = extractProjects(fullPredictionData);\n      setAvailableProjects(projects);\n      \n      setPredictions(response.data);\n      setShowPreview(false); // Hide preview after prediction\n      \n      // Reset filter state for prediction results\n      setSelectedProject(null);\n    } catch (error) {\n      setError(error.response?.data?.error || 'Error generating predictions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportResults = async (format) => {\n    if (!predictions) return;\n\n    try {\n      if (format === 'json') {\n        const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`);\n        const blob = new Blob([JSON.stringify(response.data, null, 2)], {\n          type: 'application/json',\n        });\n        saveAs(blob, `predictions_${fileData.filename.split('.')[0]}.json`);\n      } else {\n        const response = await axios.get(`/api/export/${format}/${predictions.results_filename}`, {\n          responseType: 'blob',\n        });\n        const extension = format === 'csv' ? 'csv' : 'xlsx';\n        saveAs(response.data, `predictions_${fileData.filename.split('.')[0]}.${extension}`);\n      }\n    } catch (error) {\n      setError('Error exporting results');\n    }\n  };\n\n  // Export filtered data\n  const exportFilteredData = async (format) => {\n    if (!currentData || currentData.length === 0) {\n      setError('No data to export');\n      return;\n    }\n\n    try {\n      let blob, filename;\n      \n      if (format === 'json') {\n        const jsonData = JSON.stringify(currentData, null, 2);\n        blob = new Blob([jsonData], { type: 'application/json' });\n        filename = `filtered_data_${selectedProject || 'all'}.json`;\n      } else if (format === 'csv') {\n        // Convert data to CSV\n        const headers = Object.keys(currentData[0]);\n        const csvContent = [\n          headers.join(','),\n          ...currentData.map(row => \n            headers.map(header => {\n              const value = row[header];\n              // Escape commas and quotes in CSV\n              if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n                return `\"${value.replace(/\"/g, '\"\"')}\"`;\n              }\n              return value || '';\n            }).join(',')\n          )\n        ].join('\\n');\n        \n        blob = new Blob([csvContent], { type: 'text/csv' });\n        filename = `filtered_data_${selectedProject || 'all'}.csv`;\n      } else if (format === 'xlsx') {\n        // For Excel, we'll need to use a library or convert to CSV first\n        // For now, let's use CSV format\n        const headers = Object.keys(currentData[0]);\n        const csvContent = [\n          headers.join(','),\n          ...currentData.map(row => \n            headers.map(header => {\n              const value = row[header];\n              if (typeof value === 'string' && (value.includes(',') || value.includes('\"'))) {\n                return `\"${value.replace(/\"/g, '\"\"')}\"`;\n              }\n              return value || '';\n            }).join(',')\n          )\n        ].join('\\n');\n        \n        blob = new Blob([csvContent], { type: 'text/csv' });\n        filename = `filtered_data_${selectedProject || 'all'}.csv`;\n      }\n      \n      if (blob) {\n        saveAs(blob, filename);\n      }\n    } catch (error) {\n      setError('Error exporting filtered data');\n    }\n  };\n\n  const cleanup = async () => {\n    setFileData(null);\n    setPredictions(null);\n    setFileInfo(null);\n    setError(null);\n    setShowPreview(true);\n    \n    // Reset filter state\n    setSelectedProject(null);\n    setAvailableProjects([]);\n    setFullDataset(null);\n    setFilteredData(null);\n    setFilterLoading(false);\n  };\n\n  const renderPreviewTable = (data, title) => {\n    if (!data || data.length === 0) return null;\n    \n    let columns = Object.keys(data[0]);\n    if (columns.includes('has_booked_prediction')) {\n      columns = columns.filter(c => c !== 'has_booked_prediction').concat(['has_booked_prediction']);\n    }\n    \n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            {title}\n            {filterLoading && (\n              <Spinner animation=\"border\" size=\"sm\" className=\"ms-2\" />\n            )}\n          </h5>\n        </Card.Header>\n        <Card.Body className=\"p-0\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped table-hover mb-0\">\n              <thead className=\"table-primary\">\n                <tr>\n                  {columns.map((column) => (\n                    <th key={column}>{column}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((row, index) => (\n                  <tr key={index}>\n                    {columns.map((column) => (\n                      <td key={column}>\n                        {typeof row[column] === 'boolean' \n                          ? (row[column] ? 'Yes' : 'No')\n                          : row[column]?.toString() || ''}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  const renderFileRetentionInfo = () => {\n    if (!fileInfo) return null;\n\n    const uploadDate = new Date(fileInfo.upload_timestamp);\n    const deletionDate = new Date(fileInfo.deletion_date);\n    const daysLeft = Math.ceil((deletionDate - new Date()) / (1000 * 60 * 60 * 24));\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiClock className=\"me-2\" />\n            File Retention Information\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={6}>\n              <p><strong>Upload Time:</strong> {uploadDate.toLocaleString()}</p>\n              <p><strong>Deletion Date:</strong> {deletionDate.toLocaleString()}</p>\n            </Col>\n            <Col md={6}>\n              <p><strong>Days Remaining:</strong> \n                <Badge \n                  bg={daysLeft > 30 ? 'success' : daysLeft > 7 ? 'warning' : 'danger'}\n                  className=\"ms-2\"\n                >\n                  {daysLeft} days\n                </Badge>\n              </p>\n              <p><strong>Status:</strong> \n                <Badge bg=\"info\" className=\"ms-2\">{fileInfo.status}</Badge>\n              </p>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  const renderStorageStats = () => {\n    if (!storageStats) return null;\n\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header>\n          <h5 className=\"mb-0\">\n            <FiInfo className=\"me-2\" />\n            Storage Statistics\n          </h5>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-primary\">{storageStats.total_files}</div>\n                <div className=\"text-muted\">Total Files</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-info\">{storageStats.total_size_mb} MB</div>\n                <div className=\"text-muted\">Total Size</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <div className=\"stats-number text-success\">{storageStats.retention_days}</div>\n                <div className=\"text-muted\">Retention Days</div>\n              </div>\n            </Col>\n            <Col md={3}>\n              <div className=\"text-center\">\n                <Button \n                  variant=\"outline-secondary\" \n                  size=\"sm\"\n                  onClick={fetchStorageStats}\n                >\n                  <FiInfo className=\"me-1\" />\n                  Refresh\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  return (\n    <Container fluid className=\"upload-container\">\n      <button\n        className=\"theme-toggle\"\n        onClick={() => setDarkMode((dm) => !dm)}\n        title={darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n      >\n        {darkMode ? <FiMoon /> : <FiSun />}\n      </button>\n      <Row className=\"justify-content-center\">\n        <Col lg={10}>\n          <div className=\"text-center mb-4\">\n            <h1 className=\"display-4 text-primary\">ML Prediction System</h1>\n            <p className=\"lead text-muted\">\n              Upload your CSV or Excel files to get predictions using our pre-trained models\n            </p>\n          </div>\n\n          {error && (\n            <Alert variant=\"danger\" dismissible onClose={() => setError(null)}>\n              <div>\n                <strong>Upload Error:</strong>\n                <br />\n                {error}\n                <br />\n                <small className=\"text-muted mt-2 d-block\">\n                  Please check:\n                  <ul className=\"mb-0 mt-1\">\n                    <li>File format is CSV, XLSX, or XLS</li>\n                    <li>File contains a \"projectid\" column</li>\n                    <li>Backend server is running on port 5000</li>\n                    <li>File size is reasonable (&lt; 100MB)</li>\n                  </ul>\n                </small>\n                <Button \n                  variant=\"outline-danger\" \n                  size=\"sm\" \n                  className=\"mt-2\"\n                  onClick={() => setError(null)}\n                >\n                  Try Again\n                </Button>\n              </div>\n            </Alert>\n          )}\n\n          {!fileData && (\n            <Card>\n              <Card.Body>\n                <div\n                  {...getRootProps()}\n                  className={`upload-area ${isDragActive ? 'dragover' : ''}`}\n                >\n                  <input {...getInputProps()} />\n                  <FiUpload size={48} className=\"text-primary mb-3\" />\n                  <h4>Drop your file here, or click to select</h4>\n                  <p className=\"text-muted\">\n                    Supports CSV and Excel files (max 100,000 rows) - Files are automatically converted to CSV for faster processing\n                  </p>\n                  <p className=\"text-muted small\">\n                    File must contain a \"projectid\" column\n                  </p>\n                  <div className=\"file-size-info\">\n                    <small>\n                      💡 Tip: For files larger than 10MB, only preview data will be available for filtering\n                    </small>\n                  </div>\n                </div>\n              </Card.Body>\n            </Card>\n          )}\n\n          {loading && (\n            <div className=\"loading-spinner\">\n              <div className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\" className=\"mb-3\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n                <p>Processing your file...</p>\n                <small className=\"text-muted\">\n                  This may take a few moments for large files\n                </small>\n              </div>\n            </div>\n          )}\n\n          {fileData && !loading && showPreview && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">File Information</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Filename:</strong> {fileData.originalName || fileData.filename}</p>\n                      <p><strong>Data Rows:</strong> {fullDataset?.length || fileData.preview?.length || 0}</p>\n                      <p><strong>Display Rows:</strong> {displayData?.length || 0}</p>\n                    </Col>\n                    <Col md={6}>\n                      <Button\n                        variant=\"primary\"\n                        onClick={generatePredictions}\n                        disabled={loading || !fileData}\n                        className=\"me-2\"\n                      >\n                        <FiDatabase className=\"me-2\" />\n                        Generate Predictions\n                      </Button>\n                      <Button variant=\"outline-secondary\" onClick={cleanup}>\n                        Upload New File\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              \n              {/* Project Filters */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Data Statistics */}\n              <DataStats\n                data={currentData}\n                title={selectedProject ? `Project ${selectedProject} Statistics` : \"Full Dataset Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {/* Preview Table */}\n              {(!displayData || displayData.length === 0) ? (\n                <Alert variant=\"warning\">No preview data available for this file.</Alert>\n              ) : (\n                renderPreviewTable(displayData, `Data Preview ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)\n              )}\n            </>\n          )}\n\n          {predictions && !loading && (\n            <>\n              <Card className=\"mb-4\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">Prediction Results</h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <p><strong>Rows Processed:</strong> {predictions.stats?.rows_processed ?? '-'}</p>\n                      <p><strong>Prediction Distribution:</strong> {JSON.stringify(predictions.stats?.prediction_distribution ?? {})}</p>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              \n              {/* Project Filters for Prediction Results */}\n              <ProjectFilters\n                projects={availableProjects}\n                selectedProject={selectedProject}\n                onSelect={handleProjectFilter}\n                onReset={handleFilterReset}\n                disabled={loading}\n                className=\"mb-4\"\n              />\n              \n              {/* Prediction Data Statistics */}\n              <DataStats\n                data={currentData}\n                title={selectedProject ? `Project ${selectedProject} Prediction Statistics` : \"Full Prediction Statistics\"}\n                className=\"mb-4\"\n              />\n              \n              {/* Final Prediction Preview */}\n              <h5>Final Prediction Preview</h5>\n              {renderPreviewTable(displayData, `Prediction Results ${selectedProject ? `(Project ${selectedProject})` : '(All Projects)'}`)}\n              \n              <Card>\n                <Card.Header>\n                  <h5 className=\"mb-0\">\n                    <FiDownload className=\"me-2\" />\n                    Export Results\n                  </h5>\n                </Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col md={6}>\n                      <h6>Export Full Prediction Results</h6>\n                      <div className=\"d-flex flex-wrap gap-2 mb-3\">\n                        <Button\n                          variant=\"outline-primary\"\n                          size=\"sm\"\n                          onClick={() => exportResults('csv')}\n                          className=\"btn-export\"\n                        >\n                          Export as CSV\n                        </Button>\n                        <Button\n                          variant=\"outline-success\"\n                          size=\"sm\"\n                          onClick={() => exportResults('xlsx')}\n                          className=\"btn-export\"\n                        >\n                          Export as Excel\n                        </Button>\n                        <Button\n                          variant=\"outline-info\"\n                          size=\"sm\"\n                          onClick={() => exportResults('json')}\n                          className=\"btn-export\"\n                        >\n                          Export as JSON\n                        </Button>\n                      </div>\n                    </Col>\n                    <Col md={6}>\n                      <h6>Export Filtered Data</h6>\n                      <div className=\"d-flex flex-wrap gap-2\">\n                        <Button\n                          variant=\"outline-warning\"\n                          size=\"sm\"\n                          onClick={() => exportFilteredData('csv')}\n                          className=\"btn-export\"\n                          disabled={!currentData || currentData.length === 0}\n                        >\n                          Export Filtered CSV\n                        </Button>\n                        <Button\n                          variant=\"outline-secondary\"\n                          size=\"sm\"\n                          onClick={() => exportFilteredData('json')}\n                          className=\"btn-export\"\n                          disabled={!currentData || currentData.length === 0}\n                        >\n                          Export Filtered JSON\n                        </Button>\n                      </div>\n                      {selectedProject && (\n                        <small className=\"text-muted d-block mt-1\">\n                          Exporting data for Project {selectedProject}\n                        </small>\n                      )}\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n              {/* Upload New File button at the bottom */}\n              <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem', marginBottom: '1rem' }}>\n                <Button\n                  variant=\"secondary\"\n                  size=\"lg\"\n                  onClick={cleanup}\n                  style={{ minWidth: 220, fontWeight: 600 }}\n                >\n                  Upload New File\n                </Button>\n              </div>\n            </>\n          )}\n\n          {fileInfo && (\n            <>\n              {renderFileRetentionInfo()}\n              {renderStorageStats()}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}