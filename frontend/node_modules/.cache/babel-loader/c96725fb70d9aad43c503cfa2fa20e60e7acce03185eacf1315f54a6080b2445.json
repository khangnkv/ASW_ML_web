{"ast":null,"code":"import React,{useMemo}from'react';import{Card,Row,Col,Badge}from'react-bootstrap';import{FiDatabase,FiColumns,FiInfo}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataStats=_ref=>{let{data,title=\"Data Statistics\",className=''}=_ref;const stats=useMemo(()=>{if(!data||data.length===0){return{totalRows:0,totalColumns:0,numericColumns:0,categoricalColumns:0,missingValues:0,uniqueValues:{},columnTypes:{}};}const columns=Object.keys(data[0]);const totalRows=data.length;const totalColumns=columns.length;let numericColumns=0;let categoricalColumns=0;let missingValues=0;const uniqueValues={};const columnTypes={};columns.forEach(col=>{const values=data.map(row=>row[col]).filter(val=>val!==null&&val!==undefined&&val!=='');const uniqueCount=new Set(values).size;uniqueValues[col]=uniqueCount;// Count missing values\nconst missingCount=data.length-values.length;missingValues+=missingCount;// Determine column type\nconst sampleValues=values.slice(0,10);const isNumeric=sampleValues.every(val=>{if(typeof val==='number')return true;if(typeof val==='string'){const num=parseFloat(val);return!isNaN(num)&&val.trim()!=='';}return false;});if(isNumeric){numericColumns++;columnTypes[col]='numeric';}else{categoricalColumns++;columnTypes[col]='categorical';}});return{totalRows,totalColumns,numericColumns,categoricalColumns,missingValues,uniqueValues,columnTypes};},[data]);if(!data||data.length===0){return/*#__PURE__*/_jsxs(Card,{className:\"data-stats \".concat(className),children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h6\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FiInfo,{className:\"me-2\"}),title]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"No data available\"})})]});}return/*#__PURE__*/_jsxs(Card,{className:\"data-stats \".concat(className),children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h6\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FiDatabase,{className:\"me-2\"}),title]})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:3,sm:6,className:\"mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stats-number text-primary\",children:stats.totalRows.toLocaleString()}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",children:\"Total Rows\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,sm:6,className:\"mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stats-number text-info\",children:stats.totalColumns}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",children:\"Total Columns\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,sm:6,className:\"mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stats-number text-success\",children:stats.numericColumns}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",children:\"Numeric Columns\"})]})}),/*#__PURE__*/_jsx(Col,{md:3,sm:6,className:\"mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stats-number text-warning\",children:stats.categoricalColumns}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",children:\"Categorical Columns\"})]})})]}),stats.missingValues>0&&/*#__PURE__*/_jsx(Row,{className:\"mt-3\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning py-2 mb-0\",children:[/*#__PURE__*/_jsx(FiInfo,{className:\"me-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:stats.missingValues.toLocaleString()}),\" missing values detected\"]})})}),/*#__PURE__*/_jsx(Row,{className:\"mt-3\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"h6\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(FiColumns,{className:\"me-2\"}),\"Column Overview\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column-stats\",children:[Object.keys(stats.uniqueValues).slice(0,5).map(col=>/*#__PURE__*/_jsxs(Badge,{bg:stats.columnTypes[col]==='numeric'?'success':'info',className:\"me-2 mb-1\",children:[col,\": \",stats.uniqueValues[col],\" unique\"]},col)),Object.keys(stats.uniqueValues).length>5&&/*#__PURE__*/_jsxs(Badge,{bg:\"secondary\",className:\"me-2 mb-1\",children:[\"+\",Object.keys(stats.uniqueValues).length-5,\" more\"]})]})]})})]})]});};export default DataStats;","map":{"version":3,"names":["React","useMemo","Card","Row","Col","Badge","FiDatabase","FiColumns","FiInfo","jsx","_jsx","jsxs","_jsxs","DataStats","_ref","data","title","className","stats","length","totalRows","totalColumns","numericColumns","categoricalColumns","missingValues","uniqueValues","columnTypes","columns","Object","keys","forEach","col","values","map","row","filter","val","undefined","uniqueCount","Set","size","missingCount","sampleValues","slice","isNumeric","every","num","parseFloat","isNaN","trim","concat","children","Header","Body","md","sm","toLocaleString","bg"],"sources":["C:/Users/Khang Vinh Khac/Documents/web_dev/frontend/src/components/DataStats.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Card, Row, Col, Badge } from 'react-bootstrap';\nimport { FiDatabase, FiColumns, FiInfo } from 'react-icons/fi';\n\nconst DataStats = ({ data, title = \"Data Statistics\", className = '' }) => {\n  const stats = useMemo(() => {\n    if (!data || data.length === 0) {\n      return {\n        totalRows: 0,\n        totalColumns: 0,\n        numericColumns: 0,\n        categoricalColumns: 0,\n        missingValues: 0,\n        uniqueValues: {},\n        columnTypes: {}\n      };\n    }\n\n    const columns = Object.keys(data[0]);\n    const totalRows = data.length;\n    const totalColumns = columns.length;\n    \n    let numericColumns = 0;\n    let categoricalColumns = 0;\n    let missingValues = 0;\n    const uniqueValues = {};\n    const columnTypes = {};\n\n    columns.forEach(col => {\n      const values = data.map(row => row[col]).filter(val => val !== null && val !== undefined && val !== '');\n      const uniqueCount = new Set(values).size;\n      uniqueValues[col] = uniqueCount;\n      \n      // Count missing values\n      const missingCount = data.length - values.length;\n      missingValues += missingCount;\n\n      // Determine column type\n      const sampleValues = values.slice(0, 10);\n      const isNumeric = sampleValues.every(val => {\n        if (typeof val === 'number') return true;\n        if (typeof val === 'string') {\n          const num = parseFloat(val);\n          return !isNaN(num) && val.trim() !== '';\n        }\n        return false;\n      });\n\n      if (isNumeric) {\n        numericColumns++;\n        columnTypes[col] = 'numeric';\n      } else {\n        categoricalColumns++;\n        columnTypes[col] = 'categorical';\n      }\n    });\n\n    return {\n      totalRows,\n      totalColumns,\n      numericColumns,\n      categoricalColumns,\n      missingValues,\n      uniqueValues,\n      columnTypes\n    };\n  }, [data]);\n\n  if (!data || data.length === 0) {\n    return (\n      <Card className={`data-stats ${className}`}>\n        <Card.Header>\n          <h6 className=\"mb-0\">\n            <FiInfo className=\"me-2\" />\n            {title}\n          </h6>\n        </Card.Header>\n        <Card.Body>\n          <p className=\"text-muted mb-0\">No data available</p>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={`data-stats ${className}`}>\n      <Card.Header>\n        <h6 className=\"mb-0\">\n          <FiDatabase className=\"me-2\" />\n          {title}\n        </h6>\n      </Card.Header>\n      <Card.Body>\n        <Row>\n          <Col md={3} sm={6} className=\"mb-3\">\n            <div className=\"text-center\">\n              <div className=\"stats-number text-primary\">{stats.totalRows.toLocaleString()}</div>\n              <div className=\"text-muted\">Total Rows</div>\n            </div>\n          </Col>\n          <Col md={3} sm={6} className=\"mb-3\">\n            <div className=\"text-center\">\n              <div className=\"stats-number text-info\">{stats.totalColumns}</div>\n              <div className=\"text-muted\">Total Columns</div>\n            </div>\n          </Col>\n          <Col md={3} sm={6} className=\"mb-3\">\n            <div className=\"text-center\">\n              <div className=\"stats-number text-success\">{stats.numericColumns}</div>\n              <div className=\"text-muted\">Numeric Columns</div>\n            </div>\n          </Col>\n          <Col md={3} sm={6} className=\"mb-3\">\n            <div className=\"text-center\">\n              <div className=\"stats-number text-warning\">{stats.categoricalColumns}</div>\n              <div className=\"text-muted\">Categorical Columns</div>\n            </div>\n          </Col>\n        </Row>\n\n        {stats.missingValues > 0 && (\n          <Row className=\"mt-3\">\n            <Col>\n              <div className=\"alert alert-warning py-2 mb-0\">\n                <FiInfo className=\"me-2\" />\n                <strong>{stats.missingValues.toLocaleString()}</strong> missing values detected\n              </div>\n            </Col>\n          </Row>\n        )}\n\n        <Row className=\"mt-3\">\n          <Col>\n            <h6 className=\"mb-2\">\n              <FiColumns className=\"me-2\" />\n              Column Overview\n            </h6>\n            <div className=\"column-stats\">\n              {Object.keys(stats.uniqueValues).slice(0, 5).map(col => (\n                <Badge \n                  key={col}\n                  bg={stats.columnTypes[col] === 'numeric' ? 'success' : 'info'}\n                  className=\"me-2 mb-1\"\n                >\n                  {col}: {stats.uniqueValues[col]} unique\n                </Badge>\n              ))}\n              {Object.keys(stats.uniqueValues).length > 5 && (\n                <Badge bg=\"secondary\" className=\"me-2 mb-1\">\n                  +{Object.keys(stats.uniqueValues).length - 5} more\n                </Badge>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DataStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}